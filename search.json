[{"path":"https://holgstr.github.io/fmeffects/articles/fme_theory.html","id":"intuition","dir":"Articles","previous_headings":"","what":"Intuition","title":"Why FMEs?","text":"Forward Marginal Effects (FMEs) probably intuitive way interpret feature effects supervised ML models. Remember interpret beta coefficient numerical feature linear regression model \\(\\mathbb{E}[Y] = \\beta_{0} + \\beta_{1}x_{1} + \\ldots + \\beta_{p}x_{p}\\): \\(x_{j}\\) increases one unit, predicted target variable increases \\(\\beta_{j}\\). FMEs make use instinct apply straightforwardly model. short, FMEs answer following question: change predicted target variable change value feature \\(h\\) units? examples: change predicted blood pressure patients’ weight increases \\(h\\) = 1 kg? change predicted life satisfaction person’s monthly income increases \\(h\\) = 1,000 US dollars? Per default, \\(h\\) 1. However, \\(h\\) can chosen match desired scale interpretation.","code":""},{"path":"https://holgstr.github.io/fmeffects/articles/fme_theory.html","id":"compute-effects","dir":"Articles","previous_headings":"","what":"Compute Effects","title":"Why FMEs?","text":"big advantage FMEs simple. FME defined observation-wise, .e., computed separately observation data. Often, interested estimating global effect, following: 1. Compute FME observation data2. Compute Average Marginal Effect (AME)","code":""},{"path":[]},{"path":"https://holgstr.github.io/fmeffects/articles/fme_theory.html","id":"univariate-feature-effects","dir":"Articles","previous_headings":"Compute Effects > Numerical Features","what":"Univariate Feature Effects","title":"Why FMEs?","text":"given observation \\(\\) step size \\(h_{j}\\), FME single numerical feature \\(x_{j}\\) computed :\\(\\textrm{FME}_{\\mathbf{x}^{()}, \\, h_{j}} = \\widehat{f}(x_{1}^{()},\\, \\ldots, \\, x_{j}^{()}+h_{j},\\, \\ldots, \\, x_{p}^{()})-\\widehat{f}(\\mathbf{x}^{()})\\) can seen formula, FME simply difference predictions original observation \\(x^{()}\\) changed observation \\((x_{1}^{()},\\, \\ldots, \\, x_{j}^{()}+h_{j},\\, \\ldots, \\, x_{p}^{()})\\), \\(h_{j}\\) added feature \\(x_{j}\\).","code":""},{"path":"https://holgstr.github.io/fmeffects/articles/fme_theory.html","id":"bivariate-feature-effects","dir":"Articles","previous_headings":"Compute Effects > Numerical Features","what":"Bivariate Feature Effects","title":"Why FMEs?","text":"just extension univariate FME two features \\(x_{j}, x_{k}\\) affected simultaneously step. Therefore, step size becomes vector \\(\\mathbf{h} = (h_{j}, h_{k})\\), \\(h_{j}\\) denotes change \\(x_{j}\\) \\(h_{k}\\) change \\(x_{k}\\):\\(\\textrm{FME}_{\\mathbf{x}^{()}, \\, \\mathbf{h}} = \\widehat{f}(x_{1}^{()},\\, \\ldots, \\, x_{j}^{()}+h_{j},\\, \\ldots, \\, x_{k}^{()}+h_{k}, \\, \\ldots, x_{p}^{()})-\\widehat{f}(\\mathbf{x}^{()})\\)","code":""},{"path":"https://holgstr.github.io/fmeffects/articles/fme_theory.html","id":"categorical-features","dir":"Articles","previous_headings":"Compute Effects","what":"Categorical Features","title":"Why FMEs?","text":"Equivalent step size \\(h_{j}\\) numerical feature, select category interest \\(c_{h}\\) categorical feature \\(x_{j}\\). given observation \\(\\) category \\(c_{h}\\), FME :\\(\\textrm{FME}_{\\mathbf{x}^{()}, \\, c_{h}} = \\widehat{f}(c_{h},\\, \\mathbf{x}_{-j}^{()})-\\widehat{f}(\\mathbf{x}^{()}), \\, \\, \\, \\, \\, \\, \\, \\,x_{j} \\neq c_{h}\\) simply change categorical feature \\(c_{h}\\), leave features \\(\\mathbf{x}_{-j}^{()}\\) unchanged, compare predicted value changed observation predicted value unchanged observation. Obviously, can compute observations original category category interest \\(x_{j} \\neq c_{h}\\). See example.","code":""},{"path":"https://holgstr.github.io/fmeffects/articles/fme_theory.html","id":"average-marginal-effects-ame","dir":"Articles","previous_headings":"Compute Effects","what":"Average Marginal Effects (AME)","title":"Why FMEs?","text":"AME mean every observation’s FME global estimate feature effect:\\(\\textrm{AME} = \\frac{1}{n}\\sum_{= 1}^{n}{\\, \\textrm{FME}_{\\mathbf{x}^{()}, \\, h_{j}}}\\) Therefore, AME expected difference predicted target variable feature \\(x_{j}\\) changed \\(h_{j}\\) units. \\(h_{j}\\) = 1, corresponds way interpret coefficient \\(\\beta_{j}\\) linear regression model. However, careful: choice \\(h_{j}\\) can strong effect estimated FMEs AME non-linear prediction functions, auch random forests gradient-boosted trees.","code":""},{"path":"https://holgstr.github.io/fmeffects/articles/fme_theory.html","id":"why-we-need-fmes","dir":"Articles","previous_headings":"","what":"Why we need FMEs","title":"Why FMEs?","text":"Marginal effects () already widely used concept interpret statistical models. However, believe ill-suited interpret feature effects ML models. , explain abandon MEs favor FMEs: implementations (e.g., Leeper’s margins package), MEs computed numerical approximation partial derivative prediction function w.r.t. feature \\(x_{j}\\). words, compute finite difference quotient, similar :\\(\\textrm{dME}_{\\mathbf{x}^{()}, \\, j} = \\cfrac{\\widehat{f}(x_{1}^{()}, \\, \\ldots,\\, x_{j}^{()}+h,\\, \\ldots, \\, x_{p}^{()})-\\widehat{f}(\\mathbf{x}^{()})}{h}\\) \\(h\\) typically small (e.g. 10\\({}^{-7}\\)). explained , derivative-based MEs (dME) number shortcomings: Number 1: formula computes estimate partial derivative, .e., tangent prediction function point \\(\\mathbf{x}^{()}\\). default way interpret say: \\(x_{j}\\) increases one unit, predicted target variable can expected increase \\(\\textrm{}_{\\mathbf{x}^{()}, \\, j}\\). Unconsciously, use unit change (\\(h\\) = 1) interpret computed even though computed instantaneous rate change. non-linear prediction functions, can lead substantial misinterpretations. image illustrates :  yellow line prediction function, grey line tangent point \\(x\\) = 0.5. interpreted unit change, dME subject error, due non-linearity prediction function. FME, however, corresponds true change prediction along secant (green line) \\(x\\) = 0.5 \\(x\\) = 1.5. simply way design FME, describes exactly intuition interpreting partial derivatives. Number 2: general, dMEs ill-suited describe models based piecewise constant prediction functions (e.g., CART, random forests gradient-boosted trees), observations located piecewise constant parts prediction function derivative equals zero. contrast, FMEs allow choice sensible step size \\(h\\) large enough traverse jump discontinuity, can seen example : \\(x\\) = -2.5 (green), dME zero. Using FME \\(h\\) = 1, get red point different (lower) function value. , FME negative, corresponding happens \\(x\\) = -2.5 increases one unit.  way, FME much smarter, little brother dME: describes exact behavior prediction function design corresponds way naturally want interpret partial derivative flexible choice \\(h\\), can tailored answer desired research question conceptually simple: researchers can discuss interpretations understand computed","code":""},{"path":"https://holgstr.github.io/fmeffects/articles/fme_theory.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Why FMEs?","text":"Scholbeck, Christian ., et al. “Marginal Effects Non-Linear Prediction Functions.” arXiv preprint arXiv:2201.08837 (2022).","code":""},{"path":"https://holgstr.github.io/fmeffects/articles/fmeffects.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Get started","text":"fmeffects package computes, aggregates, visualizes forward marginal effects (FMEs) supervised machine learning model. learn FMEs, look computed read methods paper -depth understanding. website best way find available resources. three main functions: fme() computes FMEs given model, data, feature interest, step size came() can applied subsequently find subspaces feature space FMEs homogeneous ame() provides overview prediction function w.r.t. feature using average marginal effects (AMEs) based FMEs.","code":""},{"path":"https://holgstr.github.io/fmeffects/articles/fmeffects.html","id":"example","dir":"Articles","previous_headings":"Introduction","what":"Example","title":"Get started","text":"demonstration purposes, consider usage data Capital Bike Sharing scheme (Fanaee-T Gama, 2014). contains information bike sharing usage Washington, D.C. years 2011-2012 period 7 8 .m. interested predicting count (total number bikes lent users). FMEs model-agnostic interpretation method, .e., can applied regression (binary) classification model. can compute FMEs, need trained model. addition generic glm models, fme package supports 100+ models mlr3, tidymodels (parsnip) caret libraries. Let’s try random forest using ranger algorithm:","code":"library(fmeffects) data(bikes, package = \"fmeffects\") str(bikes) ## Classes 'data.table' and 'data.frame':   727 obs. of  11 variables: ##  $ season    : Factor w/ 4 levels \"fall\",\"spring\",..: 2 2 2 2 2 2 2 2 2 2 ... ##  $ year      : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 1 1 ... ##  $ month     : num  1 1 1 1 1 1 1 1 1 1 ... ##  $ holiday   : Factor w/ 2 levels \"True\",\"False\": 2 2 2 2 2 2 2 2 2 2 ... ##  $ weekday   : Factor w/ 7 levels \"Sun\",\"Mon\",\"Tue\",..: 7 1 2 3 4 5 6 7 1 2 ... ##  $ workingday: Factor w/ 2 levels \"True\",\"False\": 2 2 1 1 1 1 1 2 2 1 ... ##  $ weather   : Factor w/ 3 levels \"clear\",\"misty\",..: 1 2 1 1 1 2 1 2 1 1 ... ##  $ temp      : num  8.2 16.4 5.74 4.92 7.38 6.56 8.2 6.56 3.28 4.92 ... ##  $ humidity  : num  0.86 0.76 0.5 0.74 0.43 0.59 0.69 0.74 0.53 0.5 ... ##  $ windspeed : num  0 13 13 9 13 ... ##  $ count     : num  3 1 64 94 88 95 84 9 6 77 ... ##  - attr(*, \".internal.selfref\")=<externalptr> set.seed(123) library(mlr3verse) library(ranger) task = as_task_regr(x = bikes, target = \"count\") forest = lrn(\"regr.ranger\")$train(task)"},{"path":"https://holgstr.github.io/fmeffects/articles/fmeffects.html","id":"compute-fmes","dir":"Articles","previous_headings":"","what":"Compute FMEs","title":"Get started","text":"FMEs can used compute feature effects numerical categorical features. can done fme() function.","code":""},{"path":"https://holgstr.github.io/fmeffects/articles/fmeffects.html","id":"numerical-features","dir":"Articles","previous_headings":"Compute FMEs","what":"Numerical Features","title":"Get started","text":"common application compute FME single numerical feature, .e., univariate feature effect. variable interest must specified feature argument. case, step.size can number deemed useful purpose interpretation. time, unit change, e.g., step.size = 1. concept numerical FMEs extends multivariate feature effects well, fme() can asked compute bivariate feature effect well. case, feature needs supplied names two numerical features, step.size requires vector, e.g., step.size = c(1, 1).","code":""},{"path":"https://holgstr.github.io/fmeffects/articles/fmeffects.html","id":"univariate-feature-effects","dir":"Articles","previous_headings":"Compute FMEs > Numerical Features","what":"Univariate Feature Effects","title":"Get started","text":"Assume interested effect temperature bike sharing usage. Specifically, set step.size = 1 investigate FME increase temperature 1 degree Celsius (°C). Thus, compute FMEs feature = \"temp\" step.size = 1. Note specified ep.method = \"envelope\". means exclude observations adding 1°C temperature results temperature value falling outside range temp overall data. Thereby, reduce risk asking model extrapolate.  black arrow indicates direction magnitude step.size. horizontal line average marginal effect (AME). AME computed simple mean observation-wise FMEs. Therefore, average, FME temperature increase 1°C bike sharing usage roughly 2.4. can seen, observation-wise effects seem vary different values temp. FME tends positive lower temperature values (0-20°C), turns negative higher temperature values (>20°C). Also, can extract relevant aggregate information effects object: -depth analysis, can inspect FME observation data set:","code":"effects = fme(model = forest,                data = bikes,                features = list(\"temp\" = 1),                ep.method = \"envelope\") plot(effects) effects$ame ## [1] 2.366779 head(effects$results) ## Key: <obs.id> ##    obs.id       fme ##     <int>     <num> ## 1:      1  2.674573 ## 2:      2  2.895425 ## 3:      3  5.898867 ## 4:      4 -1.429239 ## 5:      5  4.084969 ## 6:      6  4.704511"},{"path":"https://holgstr.github.io/fmeffects/articles/fmeffects.html","id":"bivariate-feature-effects","dir":"Articles","previous_headings":"Compute FMEs > Numerical Features","what":"Bivariate Feature Effects","title":"Get started","text":"Bivariate feature effects can considered one interested combined effect two features target variable. Let’s assume want estimate effect decrease temperature 3°C, combined decrease humidity 10 percentage points, .e., FME feature = c(\"temp\", \"humidity\") step.size = c(−3, −0.1):  plot bivariate FMEs uses color scale indicate direction magnitude estimated effect. can see FMEs tend positive days high temperature high humidity. Let’s check AME: seems combined decrease temperature 3°C humidity 10 percentage points seems result slightly lower bike sharing usage (average). However, quick check standard deviation FMEs implies effects highly heterogeneous: Therefore, interesting move interpretation feature effects global [semi-global perspective][Semi-global Interpretations] via came() function.","code":"effects2 = fme(model = forest,                data = bikes,                features = list(\"temp\" = -3, \"humidity\" = -0.1),                ep.method = \"envelope\") plot(effects2) effects2$ame ## [1] -2.687935 sd(effects2$results$fme) ## [1] 24.08741"},{"path":"https://holgstr.github.io/fmeffects/articles/fmeffects.html","id":"non-linearity-measure-nlm","dir":"Articles","previous_headings":"Compute FMEs > Numerical Features","what":"Non-Linearity Measure (NLM)","title":"Get started","text":"non-linearity measure complimentary tool FME. numerical, observation-wise FME prone misinterpreted linear effect. counteract , NLM quantifies linearity prediction function single observation step size. value 1 indicates linearity, value 0 lower indicates non-linearity (similar R-squared, NLM can take negative values). detailed explanation can found FME methods paper. can compute plot NLMs alongside FMEs univariate multivariate feature changes. Computing NLMs can computationally demanding, use furrr parallelization. illustrate NLMs, let’s recompute first example increase temperature 1 degree Celsius (°C) subset bikes data: Similarly AME, can extract Average NLM (ANLM): value 0.5 indicates linear effect can describe change prediction function along bivariate feature step. means weary interpreting FME linear effect. NLMs computed, can visualized alongside FMEs using .nlm = TRUE:  Equivalently, let’s compute example bivariate FMEs NLMs:","code":"effects3 = fme(model = forest,                data = bikes[1:200,],                feature = list(\"temp\" = 1),                ep.method = \"envelope\",                compute.nlm = TRUE) effects3$anlm ## [1] 0.4648 plot(effects3, with.nlm = TRUE) effects4 = fme(model = forest,                data = bikes[1:200,],                features = list(\"temp\" = -3, \"humidity\" = -0.1),                ep.method = \"envelope\",                compute.nlm = TRUE) plot(effects4, bins = 25, with.nlm = TRUE)"},{"path":"https://holgstr.github.io/fmeffects/articles/fmeffects.html","id":"categorical-features","dir":"Articles","previous_headings":"Compute FMEs","what":"Categorical Features","title":"Get started","text":"categorical feature, FME observation simply difference predictions changing observed category feature category specified step.size. instance, one interested effect rainy weather bike sharing demand, .e., FME changing feature value weather rain observations weather either clear misty: , AME rain -55. Therefore, holding features constant, change rainy weather can expected reduce bike sharing usage 55. categorical feature effects, can plot empirical distribution FMEs:","code":"effects5 = fme(model = forest,               data = bikes,               features = list(\"weather\" = \"rain\")) summary(effects5) ##  ## Forward Marginal Effects Object ##  ## Step type: ##   categorical ##  ## Feature & reference category: ##   weather, rain ##  ## Extrapolation point detection: ##   none, EPs: 0 of 657 obs. (0 %) ##  ## Average Marginal Effect (AME): ##   -55.3083 plot(effects5)"},{"path":"https://holgstr.github.io/fmeffects/articles/fmeffects.html","id":"model-overview-with-ames","dir":"Articles","previous_headings":"","what":"Model Overview with AMEs","title":"Get started","text":"informative overview feature effects model, can use ame() function: computes AME feature included model, default step size 1 numerical features (, 0.01 range smaller 1). categorical features, AMEs computed available categories. ——","code":"overview = ame(model = forest,            data = bikes) overview$results ##       Feature step.size       AME      SD      0.25      0.75   n ## 1      season    spring   -29.472 31.5101   -39.955   -5.5139 548 ## 2      season    summer    0.4772 22.5212   -9.0235   11.6321 543 ## 3      season      fall   11.7452 28.5851   -2.4282   34.1763 539 ## 4      season    winter   15.5793 24.6394    1.6525   26.2254 551 ## 5        year         0   -99.038 67.1788 -157.0608  -20.0628 364 ## 6        year         1   97.0566  60.521   21.9401  148.0847 363 ## 7       month         1    4.0814 13.3513   -1.2566     7.459 727 ## 8     holiday     False   -1.2178 21.6103   -9.1095    9.8232  21 ## 9     holiday      True   -13.738 25.3496  -32.6323    6.2019 706 ## 10    weekday       Sat  -55.0908 49.6534  -87.6489  -15.8843 622 ## 11    weekday       Sun  -85.1527 57.7791 -122.1504  -31.8105 622 ## 12    weekday       Mon   10.7224 29.2179   -8.4101   30.4207 623 ## 13    weekday       Tue   17.9396  25.728    1.1959   32.5073 625 ## 14    weekday       Wed   20.4025 23.1599    1.3386   32.8358 623 ## 15    weekday       Thu   19.4455 24.1105   -0.3097   33.4997 624 ## 16    weekday       Fri    1.7712 35.3088  -24.8956   29.5147 623 ## 17 workingday     False -204.1875 89.3882  -257.144 -142.4332 496 ## 18 workingday      True  161.0619 62.5733  118.9398  209.6916 231 ## 19    weather     clear   26.1983 41.7886    3.5991   25.9257 284 ## 20    weather     misty     3.023 32.8661   -9.1498     0.973 513 ## 21    weather      rain  -55.3083 53.0127  -94.4096    -5.481 657 ## 22       temp         1    2.3426  7.1269   -0.4294    4.5534 727 ## 23   humidity      0.01   -0.2749   2.626   -0.3249    0.3504 727 ## 24  windspeed         1    0.0052  2.4318   -0.1823    0.2318 727"},{"path":"https://holgstr.github.io/fmeffects/articles/fmeffects.html","id":"regional-interpretations","dir":"Articles","previous_headings":"","what":"Regional Interpretations","title":"Get started","text":"can use came() specific FME object compute subspaces feature space FMEs homogeneous. Let’s take effect decrease temperature 3°C combined decrease humidity 10 percentage points, see can find three appropriate subspaces. can seen, CTREE algorithm used partition feature space three subspaces. standard deviation (SD) FMEs used criterion measure homogeneity subspace. can see SD substantially smaller two three subspaces compared root node, .e., global feature space. conditional AME (cAME) can used interpret expected FME varies across subspaces. Let’s visualize results:  case, get decision tree assigns observations feature subspace according weather situation (weather) day week (weekday). information contained boxes terminal nodes equivalent summary output can extracted subspaces$results. difference cAMEs across groups means expected estimated vary substantially direction magnitude across subspaces. example, cAME highest rainy days. turns negative non-rainy days.","code":"subspaces = came(effects = effects2, number.partitions = 3) summary(subspaces) ##  ## PartitioningCtree of an FME object ##  ## Method:  partitions = 3 ##  ##    n      cAME  SD(fME)   ##  718 -2.687935 24.08741 * ##  649 -4.881628 21.90090   ##   39  4.164823 18.36672   ##   30 35.860363 38.43502   ## --- ## * root node (non-partitioned) ##  ## AME (Global): -2.6879 plot(subspaces)"},{"path":"https://holgstr.github.io/fmeffects/articles/fmeffects.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Get started","text":"Fanaee-T, H. Gama, J. (2014). Event labeling combining ensemble detectors background knowledge. Progress Artificial Intelligence 2(2): 113–127 Vanschoren, J., van Rijn, J. N., Bischl, B. Torgo, L. (2013). Openml: networked science machine learning. SIGKDD Explorations 15(2): 49–60","code":""},{"path":"https://holgstr.github.io/fmeffects/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Holger Löwe. Maintainer, author. Christian Scholbeck. Author. Christian Heumann. Reviewer. Bernd Bischl. Reviewer. Giuseppe Casalicchio. Reviewer.","code":""},{"path":"https://holgstr.github.io/fmeffects/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Löwe H, Scholbeck C (2024). fmeffects: Model-Agnostic Interpretations Forward Marginal Effects. R package version 0.1.3, https://github.com/holgstr/fmeffects, https://holgstr.github.io/fmeffects/.","code":"@Manual{,   title = {fmeffects: Model-Agnostic Interpretations with Forward Marginal Effects},   author = {Holger Löwe and Christian Scholbeck},   year = {2024},   note = {R package version 0.1.3, https://github.com/holgstr/fmeffects},   url = {https://holgstr.github.io/fmeffects/}, }"},{"path":"https://holgstr.github.io/fmeffects/index.html","id":"fmeffects-an-r-package-for-forward-marginal-effects-","dir":"","previous_headings":"","what":"Model-Agnostic Interpretations with Forward Marginal Effects","title":"Model-Agnostic Interpretations with Forward Marginal Effects","text":"package implements forward marginal effects (FMEs), model-agnostic framework interpreting feature effects machine learning models. FMEs simplest intuitive way interpret feature effects - explain computed preferred existing methods. Currently, fmeffects supports 100+ regression (binary) classification models: models tidymodels, mlr3 caret libraries. Native support lm-type models, e.g. glm gam.","code":""},{"path":"https://holgstr.github.io/fmeffects/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Model-Agnostic Interpretations with Forward Marginal Effects","text":"CRAN: GitHub:","code":"install.packages(\"fmeffects\") if (!require(\"remotes\")) {   install.packages(\"remotes\") } remotes::install_github(\"holgstr/fmeffects\")"},{"path":"https://holgstr.github.io/fmeffects/index.html","id":"quickstart","dir":"","previous_headings":"","what":"Quickstart","title":"Model-Agnostic Interpretations with Forward Marginal Effects","text":"See -depth tutorial. big advantage FMEs interpreted similar beta coefficients linear regression models. Consider following example: increase temperature (temp) 1°C affect bike rentals (count)?","code":"set.seed(123) library(fmeffects) data(bikes)"},{"path":[]},{"path":"https://holgstr.github.io/fmeffects/index.html","id":"tidymodels","dir":"","previous_headings":"Quickstart > Train a Model","what":"tidymodels","title":"Model-Agnostic Interpretations with Forward Marginal Effects","text":"","code":"# Train a model with tidymodels: library(tidymodels) forest <- rand_forest() %>%   set_mode(\"regression\") %>%   set_engine(\"ranger\") forest <- forest %>% fit(count ~ ., data = bikes)"},{"path":"https://holgstr.github.io/fmeffects/index.html","id":"mlr3","dir":"","previous_headings":"Quickstart > Train a Model","what":"mlr3","title":"Model-Agnostic Interpretations with Forward Marginal Effects","text":"","code":"# Train a model with mlr3: library(mlr3verse) task <- as_task_regr(x = bikes, target = \"count\") forest <- lrn(\"regr.ranger\")$train(task)"},{"path":[]},{"path":"https://holgstr.github.io/fmeffects/index.html","id":"compute-effects","dir":"","previous_headings":"Quickstart","what":"Compute effects","title":"Model-Agnostic Interpretations with Forward Marginal Effects","text":"","code":"effects <- fme(model = forest,               data = bikes,               features = list(\"temp\" = 1)) summary(effects) #>  #> Forward Marginal Effects Object #>  #> Step type: #>   numerical #>  #> Features & step lengths: #>   temp, 1 #>  #> Extrapolation point detection: #>   none, EPs: 0 of 727 obs. (0 %) #>  #> Average Marginal Effect (AME): #>   2.4411"},{"path":"https://holgstr.github.io/fmeffects/index.html","id":"plot-effects","dir":"","previous_headings":"Quickstart","what":"Plot effects","title":"Model-Agnostic Interpretations with Forward Marginal Effects","text":"average, increase temperature 1°C results increase predicted number bike rentals 2. called average marginal effect (AME).","code":"plot(effects)"},{"path":"https://holgstr.github.io/fmeffects/index.html","id":"model-overview","dir":"","previous_headings":"Quickstart","what":"Model Overview","title":"Model-Agnostic Interpretations with Forward Marginal Effects","text":"Let’s compute AME every feature model:","code":"overview <- ame(model = forest,                data = bikes) summary(overview) #>  #> Model Summary Using Average Marginal Effects: #>  #>       Feature step.size       AME      SD      0.25      0.75   n #> 1      season    spring  -25.5549 27.3998    -32.45   -5.9315 548 #> 2      season    summer    0.7093 21.1565   -7.6447   11.6903 543 #> 3      season      fall   10.1952 26.8142   -3.4281   32.8187 539 #> 4      season    winter   15.0809 23.8147    1.0429   26.4387 551 #> 5        year         0  -99.2488 67.1833 -158.9906  -20.4887 364 #> 6        year         1   96.7449 60.1848   22.3911  147.3953 363 #> 7       month         1     3.972 13.3527   -1.2051    7.0222 727 #> 8     holiday     False   -1.2738 20.6053  -12.3941   13.8391  21 #> 9     holiday      True  -12.6624   24.82  -31.2439    7.6505 706 #> 10    weekday       Sat  -55.4373   49.01  -87.0245  -17.8073 622 #> 11    weekday       Sun  -84.0272 55.8122 -120.5427  -33.0282 622 #> 12    weekday       Mon   11.8773  29.037   -8.0628   32.0552 623 #> 13    weekday       Tue   18.4042 25.4493    0.5363   34.5578 625 #> 14    weekday       Wed   20.9593 23.3927    1.3587   35.6727 623 #> 15    weekday       Thu    20.424 24.6661   -0.2019   37.0423 624 #> 16    weekday       Fri     2.156 36.5116  -25.2143   32.6578 623 #> 17 workingday     False -202.7007 90.6191 -255.7437 -139.1033 496 #> 18 workingday      True  161.4155 64.4276   119.987  208.2005 231 #> 19    weather     clear   26.4157 42.2183    4.0505   24.5175 284 #> 20    weather     misty    2.8201 33.2774   -9.2876    0.7728 513 #> 21    weather      rain  -56.4571 53.9396  -95.1849   -5.5318 657 #> 22       temp         1    2.4411  7.3702   -0.6545    4.8451 727 #> 23   humidity      0.01   -0.2313  2.5498   -0.3944    0.4116 727 #> 24  windspeed         1    0.0453  2.5067   -0.1638    0.3046 727"},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"AME simple mean FME computed w.r.t. feature variable model.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"predictor Predictor object features vector features AMEs computed ep.method string specifying extrapolation detection method results data.table AMEs computed computed logical specifying compute() run","code":""},{"path":[]},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"AverageMarginalEffects$new() AverageMarginalEffects$compute() AverageMarginalEffects$clone()","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"Create new AME object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"","code":"AverageMarginalEffects$new(model, data, features = NULL, ep.method = \"none\")"},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"model (trained) model, ability predict new data. must train.formula (tidymodels), Learner (mlr3), train (caret), lm glm object. data data used computing AMEs, must data.frame data.table. features named character vector names feature variables AMEs computed, together desired step sizes. ep.method String specifying method used extrapolation detection. One \"none\" \"envelope\". Defaults \"none\".","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"new AME object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"","code":"# Train a model:  library(mlr3verse) library(ranger) set.seed(123) data(bikes, package = \"fmeffects\") task = as_task_regr(x = bikes, id = \"bikes\", target = \"count\") forest = lrn(\"regr.ranger\")$train(task)  # Compute AMEs for all features: overview = AverageMarginalEffects$new(   model = forest,   data = bikes)$compute() summary(overview)  # Compute AMEs for a subset of features with non-default step.sizes: overview = AverageMarginalEffects$new(model = forest,                                       data = bikes,                                       features = c(humidity = 0.1,                                                    weather = c(\"clear\", \"rain\")))$compute() summary(overview)"},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"method-compute-","dir":"Reference","previous_headings":"","what":"Method compute()","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"Computes results, .e., AMEs including SD FMEs, AME object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"","code":"AverageMarginalEffects$compute()"},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"AME object results.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"","code":"# Compute results: overview$compute()"},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"objects class cloneable method.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"","code":"AverageMarginalEffects$clone(deep = FALSE)"},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"deep Whether make deep clone.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"","code":"## ------------------------------------------------ ## Method `AverageMarginalEffects$new` ## ------------------------------------------------  # Train a model:  library(mlr3verse) #> Loading required package: mlr3 library(ranger) set.seed(123) data(bikes, package = \"fmeffects\") task = as_task_regr(x = bikes, id = \"bikes\", target = \"count\") forest = lrn(\"regr.ranger\")$train(task)  # Compute AMEs for all features: overview = AverageMarginalEffects$new(   model = forest,   data = bikes)$compute() summary(overview) #>  #> Model Summary Using Average Marginal Effects: #>  #>       Feature step.size       AME      SD      0.25      0.75   n #> 1      season    spring   -29.472 31.5101   -39.955   -5.5139 548 #> 2      season    summer    0.4772 22.5212   -9.0235   11.6321 543 #> 3      season      fall   11.7452 28.5851   -2.4282   34.1763 539 #> 4      season    winter   15.5793 24.6394    1.6525   26.2254 551 #> 5        year         0   -99.038 67.1788 -157.0608  -20.0628 364 #> 6        year         1   97.0566  60.521   21.9401  148.0847 363 #> 7       month         1    4.0814 13.3513   -1.2566     7.459 727 #> 8     holiday     False   -1.2178 21.6103   -9.1095    9.8232  21 #> 9     holiday      True   -13.738 25.3496  -32.6323    6.2019 706 #> 10    weekday       Sat  -55.0908 49.6534  -87.6489  -15.8843 622 #> 11    weekday       Sun  -85.1527 57.7791 -122.1504  -31.8105 622 #> 12    weekday       Mon   10.7224 29.2179   -8.4101   30.4207 623 #> 13    weekday       Tue   17.9396  25.728    1.1959   32.5073 625 #> 14    weekday       Wed   20.4025 23.1599    1.3386   32.8358 623 #> 15    weekday       Thu   19.4455 24.1105   -0.3097   33.4997 624 #> 16    weekday       Fri    1.7712 35.3088  -24.8956   29.5147 623 #> 17 workingday     False -204.1875 89.3882  -257.144 -142.4332 496 #> 18 workingday      True  161.0619 62.5733  118.9398  209.6916 231 #> 19    weather     clear   26.1983 41.7886    3.5991   25.9257 284 #> 20    weather     misty     3.023 32.8661   -9.1498     0.973 513 #> 21    weather      rain  -55.3083 53.0127  -94.4096    -5.481 657 #> 22       temp         1    2.3426  7.1269   -0.4294    4.5534 727 #> 23   humidity      0.01   -0.2749   2.626   -0.3249    0.3504 727 #> 24  windspeed         1    0.0052  2.4318   -0.1823    0.2318 727  # Compute AMEs for a subset of features with non-default step.sizes: overview = AverageMarginalEffects$new(model = forest,                                       data = bikes,                                       features = c(humidity = 0.1,                                                    weather = c(\"clear\", \"rain\")))$compute() summary(overview) #>  #> Model Summary Using Average Marginal Effects: #>  #>    Feature step.size      AME       SD      0.25     0.75   n #> 1  weather     clear 26.19828 41.78861   3.59911 25.92567 284 #> 2  weather      rain -55.3083 53.01272 -94.40958 -5.48097 657 #> 3 humidity       0.1 -7.38328 16.35698   -8.5513  1.07549 727  ## ------------------------------------------------ ## Method `AverageMarginalEffects$compute` ## ------------------------------------------------  # Compute results: overview$compute()"},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"FME forward difference prediction due specified change feature values.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"feature vector features predictor Predictor object step.size vector step sizes features specified \"feature\" data.step data.table data matrix step ep.method string specifying extrapolation detection method compute.nlm logical specifying NLM computed nlm.intervals number intervals computing NLMs step.type \"numerical\" \"categorical\" extrapolation.ids vector observation ids classified extrapolation points results data.table FMEs NLMs computed ame Average Marginal Effect (AME) observations results anlm Average Non-linearity Measure (ANLM) observations results computed logical specifying compute() run","code":""},{"path":[]},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"ForwardMarginalEffect$new() ForwardMarginalEffect$compute() ForwardMarginalEffect$plot() ForwardMarginalEffect$clone()","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"Create new ForwardMarginalEffect object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"","code":"ForwardMarginalEffect$new(   predictor,   features,   ep.method = \"none\",   compute.nlm = FALSE,   nlm.intervals = 1 )"},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"predictor Predictor object. features named list feature name(s) step size(s). ep.method String specifying extrapolation detection method. compute.nlm Compute NLM FMEs? Defaults FALSE. nlm.intervals many intervals NLM computation. Defaults 1.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"new ForwardMarginalEffect object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"","code":"# Train a model:  library(mlr3verse) library(ranger) data(bikes, package = \"fmeffects\") forest = lrn(\"regr.ranger\")$train(as_task_regr(x = bikes, target = \"count\"))  # Create an `ForwardMarginalEffect` object: effects = ForwardMarginalEffect$new(makePredictor(forest, bikes),                   features = list(\"temp\" = 1, \"humidity\" = 0.01),                   ep.method = \"envelope\")"},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"method-compute-","dir":"Reference","previous_headings":"","what":"Method compute()","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"Computes results, .e., FME (NLMs) non-extrapolation points, ForwardMarginalEffect object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"","code":"ForwardMarginalEffect$compute()"},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"ForwardMarginalEffect object results.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"","code":"# Compute results: effects$compute()"},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"Plots results, .e., FME (NLMs) non-extrapolation points, FME object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"","code":"ForwardMarginalEffect$plot(with.nlm = FALSE, bins = 40, binwidth = NULL)"},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":".nlm Plots NLMs computed, defaults FALSE. bins Numeric vector giving number bins vertical horizontal directions. See ggplot2::stat_summary_hex() details. binwidth Numeric vector giving bin width vertical horizontal directions. Overrides bins set. See ggplot2::stat_summary_hex() details.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"","code":"# Compute results: effects$plot()"},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"objects class cloneable method.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"","code":"ForwardMarginalEffect$clone(deep = FALSE)"},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"deep Whether make deep clone.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"","code":"## ------------------------------------------------ ## Method `ForwardMarginalEffect$new` ## ------------------------------------------------   # Train a model:  library(mlr3verse) library(ranger) data(bikes, package = \"fmeffects\") forest = lrn(\"regr.ranger\")$train(as_task_regr(x = bikes, target = \"count\"))  # Create an `ForwardMarginalEffect` object: effects = ForwardMarginalEffect$new(makePredictor(forest, bikes),                   features = list(\"temp\" = 1, \"humidity\" = 0.01),                   ep.method = \"envelope\")  ## ------------------------------------------------ ## Method `ForwardMarginalEffect$compute` ## ------------------------------------------------  # Compute results: effects$compute()  ## ------------------------------------------------ ## Method `ForwardMarginalEffect$plot` ## ------------------------------------------------  # Compute results: effects$plot()"},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class representing a partitioning — Partitioning","title":"R6 Class representing a partitioning — Partitioning","text":"abstract superclass partitioning objects like PartitioningCtree PartitioningRpart. Partitioning contains information feature subspaces conditional average marginal effects (cAME) computed ForwardMarginalEffect objects.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class representing a partitioning — Partitioning","text":"object ForwardMarginalEffect object results computed method method finding feature subspaces value value method results descriptive statistics resulting feature subspaces tree tree representing partitioning, party object tree.control control parameters RP algorithm computed logical specifying compute() run","code":""},{"path":[]},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class representing a partitioning — Partitioning","text":"Partitioning$new() Partitioning$compute() Partitioning$plot() Partitioning$clone()","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class representing a partitioning — Partitioning","text":"Create Partitioning object","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing a partitioning — Partitioning","text":"","code":"Partitioning$new(...)"},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class representing a partitioning — Partitioning","text":"... Partitioning initialized, subclasses","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"method-compute-","dir":"Reference","previous_headings":"","what":"Method compute()","title":"R6 Class representing a partitioning — Partitioning","text":"Computes partitioning, .e., feature subspaces homogeneous FMEs, ForwardMarginalEffect object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing a partitioning — Partitioning","text":"","code":"Partitioning$compute()"},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class representing a partitioning — Partitioning","text":"Partitioning object results.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing a partitioning — Partitioning","text":"","code":"# Compute results for an arbitrary partitioning: # subspaces$compute()"},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"R6 Class representing a partitioning — Partitioning","text":"Plots results, .e., decision tree summary statistics feature subspaces, Partitioning object $compute() run.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing a partitioning — Partitioning","text":"","code":"Partitioning$plot()"},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing a partitioning — Partitioning","text":"","code":"# Plot an arbitrary partitioning: # subspaces$plot()"},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class representing a partitioning — Partitioning","text":"objects class cloneable method.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing a partitioning — Partitioning","text":"","code":"Partitioning$clone(deep = FALSE)"},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class representing a partitioning — Partitioning","text":"deep Whether make deep clone.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing a partitioning — Partitioning","text":"","code":"## ------------------------------------------------ ## Method `Partitioning$compute` ## ------------------------------------------------  # Compute results for an arbitrary partitioning: # subspaces$compute()  ## ------------------------------------------------ ## Method `Partitioning$plot` ## ------------------------------------------------  # Plot an arbitrary partitioning: # subspaces$plot()"},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningCtree.html","id":null,"dir":"Reference","previous_headings":"","what":"PartitioningCtree — PartitioningCtree","title":"PartitioningCtree — PartitioningCtree","text":"task specializes Partitioning ctree algorithm recursive partitioning. recommended use came() construction Partitioning objects.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningCtree.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PartitioningCtree — PartitioningCtree","text":"fmeffects::Partitioning -> PartitioningCtree","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningCtree.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PartitioningCtree — PartitioningCtree","text":"fmeffects::Partitioning$compute() fmeffects::Partitioning$plot()","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningCtree.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PartitioningCtree — PartitioningCtree","text":"PartitioningCtree$new() PartitioningCtree$clone()","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningCtree.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PartitioningCtree — PartitioningCtree","text":"Create new PartitioningCtree object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningCtree.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PartitioningCtree — PartitioningCtree","text":"","code":"PartitioningCtree$new(object, method, value, tree.control = NULL)"},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningCtree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PartitioningCtree — PartitioningCtree","text":"object FME object results computed. method method finding feature subspaces. value value method. tree.control control parameters RP algorithm.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningCtree.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PartitioningCtree — PartitioningCtree","text":"objects class cloneable method.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningCtree.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PartitioningCtree — PartitioningCtree","text":"","code":"PartitioningCtree$clone(deep = FALSE)"},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningCtree.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PartitioningCtree — PartitioningCtree","text":"deep Whether make deep clone.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningRpart.html","id":null,"dir":"Reference","previous_headings":"","what":"PartitioningRpart — PartitioningRpart","title":"PartitioningRpart — PartitioningRpart","text":"task specializes Partitioning rpart algorithm recursive partitioning. recommended use came() construction Partitioning objects.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningRpart.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PartitioningRpart — PartitioningRpart","text":"fmeffects::Partitioning -> PartitioningRpart","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningRpart.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PartitioningRpart — PartitioningRpart","text":"fmeffects::Partitioning$compute() fmeffects::Partitioning$plot()","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningRpart.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PartitioningRpart — PartitioningRpart","text":"PartitioningRpart$new() PartitioningRpart$clone()","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningRpart.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PartitioningRpart — PartitioningRpart","text":"Create new PartitioningRpart object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningRpart.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PartitioningRpart — PartitioningRpart","text":"","code":"PartitioningRpart$new(object, method, value, tree.control = NULL)"},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningRpart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PartitioningRpart — PartitioningRpart","text":"object FME object results computed. method method finding feature subspaces. value value method. tree.control Control parameters RP algorithm.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningRpart.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PartitioningRpart — PartitioningRpart","text":"objects class cloneable method.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningRpart.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PartitioningRpart — PartitioningRpart","text":"","code":"PartitioningRpart$clone(deep = FALSE)"},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningRpart.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PartitioningRpart — PartitioningRpart","text":"deep Whether make deep clone.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Predictor.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class representing a predictor — Predictor","title":"R6 Class representing a predictor — Predictor","text":"abstract superclass predictor objects like PredictorMLR3 PredictorCaret. Predictor contains information ML model's prediction function training data.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Predictor.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class representing a predictor — Predictor","text":"model (trained) model, ability predict new data. target character vector name target variable. X data.table feature target variables. feature.names character vector names features X. feature.types character vector types (numerical categorical) features X.","code":""},{"path":[]},{"path":"https://holgstr.github.io/fmeffects/reference/Predictor.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class representing a predictor — Predictor","text":"Predictor$new() Predictor$clone()","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Predictor.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class representing a predictor — Predictor","text":"Create Predictor object","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Predictor.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing a predictor — Predictor","text":"","code":"Predictor$new(...)"},{"path":"https://holgstr.github.io/fmeffects/reference/Predictor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class representing a predictor — Predictor","text":"... Predictor initialized, subclasses","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Predictor.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class representing a predictor — Predictor","text":"objects class cloneable method.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Predictor.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing a predictor — Predictor","text":"","code":"Predictor$clone(deep = FALSE)"},{"path":"https://holgstr.github.io/fmeffects/reference/Predictor.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class representing a predictor — Predictor","text":"deep Whether make deep clone.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorCaret.html","id":null,"dir":"Reference","previous_headings":"","what":"PredictorCaret — PredictorCaret","title":"PredictorCaret — PredictorCaret","text":"task specializes Predictor caret regression models. model assumed c(\"train\", \"train.formula\"). recommended use makePredictor() construction Predictor objects.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorCaret.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PredictorCaret — PredictorCaret","text":"fmeffects::Predictor -> PredictorCaret","code":""},{"path":[]},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorCaret.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PredictorCaret — PredictorCaret","text":"PredictorCaret$new() PredictorCaret$predict() PredictorCaret$clone()","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorCaret.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PredictorCaret — PredictorCaret","text":"Create new PredictorCaret object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorCaret.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PredictorCaret — PredictorCaret","text":"","code":"PredictorCaret$new(model, data)"},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorCaret.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PredictorCaret — PredictorCaret","text":"model train, train.formula object. data data used computing FMEs, must data.frame data.table.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorCaret.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"PredictorCaret — PredictorCaret","text":"Predicts observation \"newdata\".","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorCaret.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PredictorCaret — PredictorCaret","text":"","code":"PredictorCaret$predict(newdata)"},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorCaret.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PredictorCaret — PredictorCaret","text":"newdata feature vector target predicted.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorCaret.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PredictorCaret — PredictorCaret","text":"objects class cloneable method.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorCaret.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PredictorCaret — PredictorCaret","text":"","code":"PredictorCaret$clone(deep = FALSE)"},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorCaret.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"PredictorCaret — PredictorCaret","text":"deep Whether make deep clone.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorLM.html","id":null,"dir":"Reference","previous_headings":"","what":"PredictorLM — PredictorLM","title":"PredictorLM — PredictorLM","text":"task specializes Predictor lm lm-type models. model assumed lm. recommended use makePredictor() construction Predictor objects.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorLM.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PredictorLM — PredictorLM","text":"fmeffects::Predictor -> PredictorLM","code":""},{"path":[]},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorLM.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PredictorLM — PredictorLM","text":"PredictorLM$new() PredictorLM$predict() PredictorLM$clone()","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorLM.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PredictorLM — PredictorLM","text":"Create new PredictorCaret object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorLM.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PredictorLM — PredictorLM","text":"","code":"PredictorLM$new(model, data)"},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorLM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PredictorLM — PredictorLM","text":"model train, train.formula object. data data used computing FMEs, must data.frame data.table.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorLM.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"PredictorLM — PredictorLM","text":"Predicts observation \"newdata\".","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorLM.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PredictorLM — PredictorLM","text":"","code":"PredictorLM$predict(newdata)"},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorLM.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PredictorLM — PredictorLM","text":"newdata feature vector target predicted.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorLM.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PredictorLM — PredictorLM","text":"objects class cloneable method.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorLM.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PredictorLM — PredictorLM","text":"","code":"PredictorLM$clone(deep = FALSE)"},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorLM.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"PredictorLM — PredictorLM","text":"deep Whether make deep clone.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorMLR3.html","id":null,"dir":"Reference","previous_headings":"","what":"PredictorMLR3 — PredictorMLR3","title":"PredictorMLR3 — PredictorMLR3","text":"task specializes Predictor mlr3 models. model assumed LearnerRegr LearnerClassif. recommended use makePredictor() construction Predictor objects.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorMLR3.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PredictorMLR3 — PredictorMLR3","text":"fmeffects::Predictor -> PredictorMLR3","code":""},{"path":[]},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorMLR3.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PredictorMLR3 — PredictorMLR3","text":"PredictorMLR3$new() PredictorMLR3$predict() PredictorMLR3$clone()","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorMLR3.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PredictorMLR3 — PredictorMLR3","text":"Create new PredictorMLR3 object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorMLR3.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PredictorMLR3 — PredictorMLR3","text":"","code":"PredictorMLR3$new(model, data)"},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorMLR3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PredictorMLR3 — PredictorMLR3","text":"model LearnerRegr LearnerClassif object. data data used computing FMEs, must data.frame data.table.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorMLR3.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"PredictorMLR3 — PredictorMLR3","text":"Predicts observation \"newdata\".","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorMLR3.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PredictorMLR3 — PredictorMLR3","text":"","code":"PredictorMLR3$predict(newdata)"},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorMLR3.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PredictorMLR3 — PredictorMLR3","text":"newdata feature vector target predicted.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorMLR3.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PredictorMLR3 — PredictorMLR3","text":"objects class cloneable method.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorMLR3.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PredictorMLR3 — PredictorMLR3","text":"","code":"PredictorMLR3$clone(deep = FALSE)"},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorMLR3.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"PredictorMLR3 — PredictorMLR3","text":"deep Whether make deep clone.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorParsnip.html","id":null,"dir":"Reference","previous_headings":"","what":"PredictorParsnip — PredictorParsnip","title":"PredictorParsnip — PredictorParsnip","text":"task specializes Predictor parsnip models. model assumed model_fit object. recommended use makePredictor() construction Predictor objects.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorParsnip.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PredictorParsnip — PredictorParsnip","text":"fmeffects::Predictor -> PredictorParsnip","code":""},{"path":[]},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorParsnip.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PredictorParsnip — PredictorParsnip","text":"PredictorParsnip$new() PredictorParsnip$predict() PredictorParsnip$clone()","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorParsnip.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PredictorParsnip — PredictorParsnip","text":"Create new PredictorParsnip object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorParsnip.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PredictorParsnip — PredictorParsnip","text":"","code":"PredictorParsnip$new(model, data)"},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorParsnip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PredictorParsnip — PredictorParsnip","text":"model model_fit object. data data used computing FMEs, must data.frame data.table.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorParsnip.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"PredictorParsnip — PredictorParsnip","text":"Predicts observation \"newdata\".","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorParsnip.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PredictorParsnip — PredictorParsnip","text":"","code":"PredictorParsnip$predict(newdata)"},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorParsnip.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PredictorParsnip — PredictorParsnip","text":"newdata feature vector target predicted.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorParsnip.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PredictorParsnip — PredictorParsnip","text":"objects class cloneable method.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorParsnip.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PredictorParsnip — PredictorParsnip","text":"","code":"PredictorParsnip$clone(deep = FALSE)"},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorParsnip.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"PredictorParsnip — PredictorParsnip","text":"deep Whether make deep clone.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ame.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes AMEs for every feature (or a subset of features) of a model. — ame","title":"Computes AMEs for every feature (or a subset of features) of a model. — ame","text":"wrapper function AverageMarginalEffects$new(...)$compute(). computes Average Marginal Effects (AME) based Forward Marginal Effects (FME) model. AME simple mean FME computed w.r.t. feature variable model.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes AMEs for every feature (or a subset of features) of a model. — ame","text":"","code":"ame(model, data, features = NULL, ep.method = \"none\")"},{"path":"https://holgstr.github.io/fmeffects/reference/ame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes AMEs for every feature (or a subset of features) of a model. — ame","text":"model (trained) model, ability predict new data. must train.formula (tidymodels), Learner (mlr3), train (caret), lm glm object. data data used computing AMEs, must data.frame data.table. features named character vector names feature variables AMEs computed, together desired step sizes. ep.method String specifying method used extrapolation detection. One \"none\" \"envelope\". Defaults \"none\".","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes AMEs for every feature (or a subset of features) of a model. — ame","text":"AverageMarginalEffects object, field results containing list summary statistics, including Feature: name feature. step.size: step.size w.r.t. specified feature. AME: Average Marginal Effect step length step.size w.r.t. specified feature. SD: standard deviation FMEs specified feature step.size. 0.25: 0.25-quantile FMEs specified feature step.size. 0.75: 0.75-quantile FMEs specified feature step.size. n: number observations included computation AME. can vary following reasons: categorical features, FMEs computed observations original category step.size category. numerical features, FMEs computed observations extrapolation points (ep.method set \"envelope\").","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ame.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Computes AMEs for every feature (or a subset of features) of a model. — ame","text":"Scholbeck, C.., Casalicchio, G., Molnar, C. et al. Marginal effects non-linear prediction functions. Data Min Knowl Disc (2024). https://doi.org/10.1007/s10618-023-00993-x","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes AMEs for every feature (or a subset of features) of a model. — ame","text":"","code":"# Train a model:  library(mlr3verse) library(ranger) data(bikes, package = \"fmeffects\") set.seed(123) task = as_task_regr(x = bikes, id = \"bikes\", target = \"count\") forest = lrn(\"regr.ranger\")$train(task)  # Compute AMEs for all features: overview = ame(model = forest, data = bikes) summary(overview) #>  #> Model Summary Using Average Marginal Effects: #>  #>       Feature step.size       AME      SD      0.25      0.75   n #> 1      season    spring   -29.472 31.5101   -39.955   -5.5139 548 #> 2      season    summer    0.4772 22.5212   -9.0235   11.6321 543 #> 3      season      fall   11.7452 28.5851   -2.4282   34.1763 539 #> 4      season    winter   15.5793 24.6394    1.6525   26.2254 551 #> 5        year         0   -99.038 67.1788 -157.0608  -20.0628 364 #> 6        year         1   97.0566  60.521   21.9401  148.0847 363 #> 7       month         1    4.0814 13.3513   -1.2566     7.459 727 #> 8     holiday     False   -1.2178 21.6103   -9.1095    9.8232  21 #> 9     holiday      True   -13.738 25.3496  -32.6323    6.2019 706 #> 10    weekday       Sat  -55.0908 49.6534  -87.6489  -15.8843 622 #> 11    weekday       Sun  -85.1527 57.7791 -122.1504  -31.8105 622 #> 12    weekday       Mon   10.7224 29.2179   -8.4101   30.4207 623 #> 13    weekday       Tue   17.9396  25.728    1.1959   32.5073 625 #> 14    weekday       Wed   20.4025 23.1599    1.3386   32.8358 623 #> 15    weekday       Thu   19.4455 24.1105   -0.3097   33.4997 624 #> 16    weekday       Fri    1.7712 35.3088  -24.8956   29.5147 623 #> 17 workingday     False -204.1875 89.3882  -257.144 -142.4332 496 #> 18 workingday      True  161.0619 62.5733  118.9398  209.6916 231 #> 19    weather     clear   26.1983 41.7886    3.5991   25.9257 284 #> 20    weather     misty     3.023 32.8661   -9.1498     0.973 513 #> 21    weather      rain  -55.3083 53.0127  -94.4096    -5.481 657 #> 22       temp         1    2.3426  7.1269   -0.4294    4.5534 727 #> 23   humidity      0.01   -0.2749   2.626   -0.3249    0.3504 727 #> 24  windspeed         1    0.0052  2.4318   -0.1823    0.2318 727  # Compute AMEs for a subset of features with non-default step.sizes: overview = ame(model = forest,                data = bikes,                features = c(humidity = 0.1, weather = c(\"clear\", \"rain\"))) summary(overview) #>  #> Model Summary Using Average Marginal Effects: #>  #>       Feature step.size       AME      SD      0.25      0.75   n #> 1      season    spring   -29.472 31.5101   -39.955   -5.5139 548 #> 2      season    summer    0.4772 22.5212   -9.0235   11.6321 543 #> 3      season      fall   11.7452 28.5851   -2.4282   34.1763 539 #> 4      season    winter   15.5793 24.6394    1.6525   26.2254 551 #> 5        year         0   -99.038 67.1788 -157.0608  -20.0628 364 #> 6        year         1   97.0566  60.521   21.9401  148.0847 363 #> 7       month         1    4.0814 13.3513   -1.2566     7.459 727 #> 8     holiday     False   -1.2178 21.6103   -9.1095    9.8232  21 #> 9     holiday      True   -13.738 25.3496  -32.6323    6.2019 706 #> 10    weekday       Sat  -55.0908 49.6534  -87.6489  -15.8843 622 #> 11    weekday       Sun  -85.1527 57.7791 -122.1504  -31.8105 622 #> 12    weekday       Mon   10.7224 29.2179   -8.4101   30.4207 623 #> 13    weekday       Tue   17.9396  25.728    1.1959   32.5073 625 #> 14    weekday       Wed   20.4025 23.1599    1.3386   32.8358 623 #> 15    weekday       Thu   19.4455 24.1105   -0.3097   33.4997 624 #> 16    weekday       Fri    1.7712 35.3088  -24.8956   29.5147 623 #> 17 workingday     False -204.1875 89.3882  -257.144 -142.4332 496 #> 18 workingday      True  161.0619 62.5733  118.9398  209.6916 231 #> 19    weather     clear   26.1983 41.7886    3.5991   25.9257 284 #> 20    weather     misty     3.023 32.8661   -9.1498     0.973 513 #> 21    weather      rain  -55.3083 53.0127  -94.4096    -5.481 657 #> 22       temp         1    2.3426  7.1269   -0.4294    4.5534 727 #> 23   humidity      0.01   -0.2749   2.626   -0.3249    0.3504 727 #> 24  windspeed         1    0.0052  2.4318   -0.1823    0.2318 727  # Extract results: overview$results #>       Feature step.size       AME      SD      0.25      0.75   n #> 1      season    spring   -29.472 31.5101   -39.955   -5.5139 548 #> 2      season    summer    0.4772 22.5212   -9.0235   11.6321 543 #> 3      season      fall   11.7452 28.5851   -2.4282   34.1763 539 #> 4      season    winter   15.5793 24.6394    1.6525   26.2254 551 #> 5        year         0   -99.038 67.1788 -157.0608  -20.0628 364 #> 6        year         1   97.0566  60.521   21.9401  148.0847 363 #> 7       month         1    4.0814 13.3513   -1.2566     7.459 727 #> 8     holiday     False   -1.2178 21.6103   -9.1095    9.8232  21 #> 9     holiday      True   -13.738 25.3496  -32.6323    6.2019 706 #> 10    weekday       Sat  -55.0908 49.6534  -87.6489  -15.8843 622 #> 11    weekday       Sun  -85.1527 57.7791 -122.1504  -31.8105 622 #> 12    weekday       Mon   10.7224 29.2179   -8.4101   30.4207 623 #> 13    weekday       Tue   17.9396  25.728    1.1959   32.5073 625 #> 14    weekday       Wed   20.4025 23.1599    1.3386   32.8358 623 #> 15    weekday       Thu   19.4455 24.1105   -0.3097   33.4997 624 #> 16    weekday       Fri    1.7712 35.3088  -24.8956   29.5147 623 #> 17 workingday     False -204.1875 89.3882  -257.144 -142.4332 496 #> 18 workingday      True  161.0619 62.5733  118.9398  209.6916 231 #> 19    weather     clear   26.1983 41.7886    3.5991   25.9257 284 #> 20    weather     misty     3.023 32.8661   -9.1498     0.973 513 #> 21    weather      rain  -55.3083 53.0127  -94.4096    -5.481 657 #> 22       temp         1    2.3426  7.1269   -0.4294    4.5534 727 #> 23   humidity      0.01   -0.2749   2.626   -0.3249    0.3504 727 #> 24  windspeed         1    0.0052  2.4318   -0.1823    0.2318 727"},{"path":"https://holgstr.github.io/fmeffects/reference/bikes.html","id":null,"dir":"Reference","previous_headings":"","what":"Regression data of the usage of rental bikes in Washington D.C., USA — bikes","title":"Regression data of the usage of rental bikes in Washington D.C., USA — bikes","text":"data set contains information hourly bike sharing usage Washington, D.C. years 2011-2012. target variable count, total number bikes lent users specific time.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/bikes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression data of the usage of rental bikes in Washington D.C., USA — bikes","text":"","code":"data(bikes)"},{"path":"https://holgstr.github.io/fmeffects/reference/bikes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Regression data of the usage of rental bikes in Washington D.C., USA — bikes","text":"object class data.table (inherits data.frame) 727 rows 11 columns.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/bikes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Regression data of the usage of rental bikes in Washington D.C., USA — bikes","text":"subset original data, can found OpenML database (ID = 42712).","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/bikes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Regression data of the usage of rental bikes in Washington D.C., USA — bikes","text":"data frame contains following columns: season Season year year Year; 0=2011, 1=2012 month Month year holiday day public holiday (y/n) weekday Day week workingday day aworking day (y/n) weather Weather situation temp Temperature degrees celsius humidity Humidity (relative) windspeed Windspeed miles per hour count Total number bikes lent users","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/bikes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Regression data of the usage of rental bikes in Washington D.C., USA — bikes","text":"Fanaee-T, Hadi, Gama, Joao, \"Event labeling combining ensemble detectors background knowledge\", Progress Artificial Intelligence (2013): pp. 1-15, Springer Berlin Heidelberg, doi:10.1007/s13748-013-0040-3. Vanschoren, Joaquin, et al. \"OpenML: networked science machine learning.\" ACM SIGKDD Explorations Newsletter 15.2 (2014): 49-60.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/came.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes a partitioning for a ForwardMarginalEffect — came","title":"Computes a partitioning for a ForwardMarginalEffect — came","text":"wrapper function creates correct subclass Partitioning. computes feature subspaces semi-global interpretations FMEs via recursive partitioning (RP).","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/came.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes a partitioning for a ForwardMarginalEffect — came","text":"","code":"came(   effects,   number.partitions = NULL,   max.sd = Inf,   rp.method = \"ctree\",   tree.control = NULL )"},{"path":"https://holgstr.github.io/fmeffects/reference/came.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes a partitioning for a ForwardMarginalEffect — came","text":"effects ForwardMarginalEffect object FMEs computed. number.partitions exact number partitions required. Either number.partitions max.sd can specified. max.sd maximum standard deviation required partition. Among multiple partitionings criterion identified, one lowest number partitions selected. Either number.partitions max.sd can specified. rp.method One \"ctree\" \"rpart\". RP algorithm used growing decision tree. Defaults \"ctree\". tree.control Control parameters RP algorithm. One \"ctree.control(...)\" \"rpart.control(...)\".","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/came.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes a partitioning for a ForwardMarginalEffect — came","text":"Partitioning Object identified feature subspaces.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/came.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Computes a partitioning for a ForwardMarginalEffect — came","text":"Scholbeck, C.., Casalicchio, G., Molnar, C. et al. Marginal effects non-linear prediction functions. Data Min Knowl Disc (2024). https://doi.org/10.1007/s10618-023-00993-x","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/came.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes a partitioning for a ForwardMarginalEffect — came","text":"","code":"# Train a model and compute FMEs:  library(mlr3verse) library(ranger) data(bikes, package = \"fmeffects\") task = as_task_regr(x = bikes, id = \"bikes\", target = \"count\") forest = lrn(\"regr.ranger\")$train(task) effects = fme(model = forest, data = bikes, features = list(\"temp\" = 1), ep.method = \"envelope\")  # Find a partitioning with exactly 3 subspaces: subspaces = came(effects, number.partitions = 3)  # Find a partitioning with a maximum standard deviation of 20, use `rpart`: library(rpart) subspaces = came(effects, max.sd = 20, rp.method = \"rpart\")  # Analyze results: summary(subspaces) #>  #> PartitioningRpart of an FME object #>  #> Method:  max.sd = 20 #>  #>    n      cAME  SD(fME)   #>  721  2.306456 6.980657 * #>   65 -4.323121 7.174124   #>  656  2.963350 6.613822   #> --- #> * root node (non-partitioned) #>  #> AME (Global): 2.3065 #>  plot(subspaces)   # Extract results: subspaces$results #> [[1]] #> [[1]]$n #> [1] 721 #>  #> [[1]]$cAME #> [1] 2.306456 #>  #> [[1]]$`SD(fME)` #> [1] 6.980657 #>  #> [[1]]$is.terminal.node #> [1] FALSE #>  #>  #> [[2]] #> [[2]]$n #> [1] 65 #>  #> [[2]]$cAME #> [1] -4.323121 #>  #> [[2]]$`SD(fME)` #> [1] 7.174124 #>  #> [[2]]$is.terminal.node #> [1] TRUE #>  #>  #> [[3]] #> [[3]]$n #> [1] 656 #>  #> [[3]]$cAME #> [1] 2.96335 #>  #> [[3]]$`SD(fME)` #> [1] 6.613822 #>  #> [[3]]$is.terminal.node #> [1] TRUE #>  #>  subspaces$tree #>  #> Model formula: #> fme ~ season + year + month + holiday + weekday + workingday +  #>     weather + temp + humidity + windspeed #>  #> Fitted party: #> [1] root #> |   [2] temp >= 28.29: -4.323 (n = 65, err = 3294.0) #> |   [3] temp < 28.29: 2.963 (n = 656, err = 28651.4) #>  #> Number of inner nodes:    1 #> Number of terminal nodes: 2"},{"path":"https://holgstr.github.io/fmeffects/reference/fme.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes FMEs. — fme","title":"Computes FMEs. — fme","text":"wrapper function FME$new(...)$compute(). computes forward marginal effects (FMEs) specified change feature values.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/fme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes FMEs. — fme","text":"","code":"fme(   model,   data,   features,   ep.method = \"none\",   compute.nlm = FALSE,   nlm.intervals = 1 )"},{"path":"https://holgstr.github.io/fmeffects/reference/fme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes FMEs. — fme","text":"model (trained) model, ability predict new data. must train.formula (tidymodels), Learner (mlr3), train (caret), lm glm object. data data used computing FMEs, must data.frame data.table. features named list feature name(s) step size(s). list names correspond names feature variables affected step. list can contain either 1 2 numeric features, 1 categorical feature. Numeric features must number step size, categorical features name reference category. ep.method String specifying method used extrapolation detection. One \"none\" \"envelope\". Defaults \"none\". compute.nlm Compute NLMs FMEs numerical steps. Defaults FALSE. nlm.intervals Number intervals computing NLMs. Results longer computing time accurate approximation NLMs. Defaults 1.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/fme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes FMEs. — fme","text":"FME Object FMEs computed.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/fme.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Computes FMEs. — fme","text":"Scholbeck, C.., Casalicchio, G., Molnar, C. et al. Marginal effects non-linear prediction functions. Data Min Knowl Disc (2024). https://doi.org/10.1007/s10618-023-00993-x","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/fme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes FMEs. — fme","text":"","code":"# Train a model:  library(mlr3verse) library(ranger) data(bikes, package = \"fmeffects\") forest = lrn(\"regr.ranger\")$train(as_task_regr(x = bikes, target = \"count\"))  # Compute FMEs for a numerical feature: effects = fme(model = forest, data = bikes, features = list(\"temp\" = 1), ep.method = \"envelope\")  # Analyze results: summary(effects) #>  #> Forward Marginal Effects Object #>  #> Step type: #>   numerical #>  #> Features & step lengths: #>   temp, 1 #>  #> Extrapolation point detection: #>   envelope, EPs: 6 of 727 obs. (1 %) #>  #> Average Marginal Effect (AME): #>   2.3553 plot(effects) #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'   # Extract results: effects$results #> Key: <obs.id> #>      obs.id        fme #>       <int>      <num> #>   1:      1  2.1940035 #>   2:      2  2.0701913 #>   3:      3  6.0628141 #>   4:      4 -0.5544905 #>   5:      5  2.0181465 #>  ---                   #> 717:    723 31.4576514 #> 718:    724 11.3777905 #> 719:    725  5.0419762 #> 720:    726  2.1508544 #> 721:    727  8.8983844  # Compute the AME for a categorial feature: fme(model = forest, data = bikes, features = list(\"weather\" = \"rain\"))$ame #> [1] -55.38214"},{"path":"https://holgstr.github.io/fmeffects/reference/fmeffects-package.html","id":null,"dir":"Reference","previous_headings":"","what":"fmeffects — fmeffects-package","title":"fmeffects — fmeffects-package","text":"Computes forward marginal effects (FME) arbitrary supervised machine learning models. provide model data, 'fmeffects' gives feature effects.","code":""},{"path":[]},{"path":"https://holgstr.github.io/fmeffects/reference/fmeffects-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"fmeffects — fmeffects-package","text":"Maintainer: Holger Löwe hbj.loewe@gmail.com Authors: Christian Scholbeck christian.scholbeck@stat.uni-muenchen.de contributors: Christian Heumann christian.heumann@stat.uni-muenchen.de [reviewer] Bernd Bischl bernd.bischl@stat.uni-muenchen.de [reviewer] Giuseppe Casalicchio giuseppe.casalicchio@stat.uni-muenchen.de [reviewer]","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/makePredictor.html","id":null,"dir":"Reference","previous_headings":"","what":"User-friendly function to create a Predictor. — makePredictor","title":"User-friendly function to create a Predictor. — makePredictor","text":"wrapper function creates correct subclass Predictor automatically model. Can passed constructor FME.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/makePredictor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User-friendly function to create a Predictor. — makePredictor","text":"","code":"makePredictor(model, data)"},{"path":"https://holgstr.github.io/fmeffects/reference/makePredictor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User-friendly function to create a Predictor. — makePredictor","text":"model (trained) model, ability predict new data. data data used computing FMEs, must data.frame data.table.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/makePredictor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"User-friendly function to create a Predictor. — makePredictor","text":"","code":"# Train a model:  library(mlr3verse) data(bikes, package = \"fmeffects\") task = as_task_regr(x = bikes, id = \"bikes\", target = \"count\") forest = lrn(\"regr.ranger\")$train(task)  # Create the predictor: predictor = makePredictor(forest, bikes)  # This instantiated an object of the correct subclass of `Predictor`: class(predictor) #> [1] \"PredictorMLR3\" \"Predictor\"     \"R6\""},{"path":"https://holgstr.github.io/fmeffects/reference/plot.ForwardMarginalEffect.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots an ForwardMarginalEffect object. — plot.ForwardMarginalEffect","title":"Plots an ForwardMarginalEffect object. — plot.ForwardMarginalEffect","text":"Plots ForwardMarginalEffect object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/plot.ForwardMarginalEffect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots an ForwardMarginalEffect object. — plot.ForwardMarginalEffect","text":"","code":"# S3 method for ForwardMarginalEffect plot(x, ...)"},{"path":"https://holgstr.github.io/fmeffects/reference/plot.ForwardMarginalEffect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots an ForwardMarginalEffect object. — plot.ForwardMarginalEffect","text":"x object class ForwardMarginalEffect. See method $plot() ForwardMarginalEffect() details. ... additional arguments affecting summary produced.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/plot.Partitioning.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots an FME Partitioning. — plot.Partitioning","title":"Plots an FME Partitioning. — plot.Partitioning","text":"Plots FME Partitioning.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/plot.Partitioning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots an FME Partitioning. — plot.Partitioning","text":"","code":"# S3 method for Partitioning plot(x, ...)"},{"path":"https://holgstr.github.io/fmeffects/reference/plot.Partitioning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots an FME Partitioning. — plot.Partitioning","text":"x object class Partitioning. ... additional arguments affecting summary produced.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/print.ForwardMarginalEffect.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints an ForwardMarginalEffect object. — print.ForwardMarginalEffect","title":"Prints an ForwardMarginalEffect object. — print.ForwardMarginalEffect","text":"Prints ForwardMarginalEffect object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/print.ForwardMarginalEffect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints an ForwardMarginalEffect object. — print.ForwardMarginalEffect","text":"","code":"# S3 method for ForwardMarginalEffect print(x, ...)"},{"path":"https://holgstr.github.io/fmeffects/reference/print.ForwardMarginalEffect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints an ForwardMarginalEffect object. — print.ForwardMarginalEffect","text":"x object class ForwardMarginalEffect. ... additional arguments affecting summary produced.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/print.Partitioning.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints an FME Partitioning. — print.Partitioning","title":"Prints an FME Partitioning. — print.Partitioning","text":"Prints FME Partitioning.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/print.Partitioning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints an FME Partitioning. — print.Partitioning","text":"","code":"# S3 method for Partitioning print(x, ...)"},{"path":"https://holgstr.github.io/fmeffects/reference/print.Partitioning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints an FME Partitioning. — print.Partitioning","text":"x object class Partitioning. ... additional arguments affecting summary produced.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/summary.AverageMarginalEffects.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints summary of an AverageMarginalEffects object. — summary.AverageMarginalEffects","title":"Prints summary of an AverageMarginalEffects object. — summary.AverageMarginalEffects","text":"Prints summary AverageMarginalEffects object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/summary.AverageMarginalEffects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints summary of an AverageMarginalEffects object. — summary.AverageMarginalEffects","text":"","code":"# S3 method for AverageMarginalEffects summary(object, ...)"},{"path":"https://holgstr.github.io/fmeffects/reference/summary.AverageMarginalEffects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints summary of an AverageMarginalEffects object. — summary.AverageMarginalEffects","text":"object object class AverageMarginalEffects. ... additional arguments affecting summary produced.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/summary.ForwardMarginalEffect.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints summary of an ForwardMarginalEffect object. — summary.ForwardMarginalEffect","title":"Prints summary of an ForwardMarginalEffect object. — summary.ForwardMarginalEffect","text":"Prints summary ForwardMarginalEffect object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/summary.ForwardMarginalEffect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints summary of an ForwardMarginalEffect object. — summary.ForwardMarginalEffect","text":"","code":"# S3 method for ForwardMarginalEffect summary(object, ...)"},{"path":"https://holgstr.github.io/fmeffects/reference/summary.ForwardMarginalEffect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints summary of an ForwardMarginalEffect object. — summary.ForwardMarginalEffect","text":"object object class ForwardMarginalEffect. ... additional arguments affecting summary produced.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/summary.Partitioning.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints summary of an FME Partitioning. — summary.Partitioning","title":"Prints summary of an FME Partitioning. — summary.Partitioning","text":"Prints summary FME Partitioning.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/summary.Partitioning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints summary of an FME Partitioning. — summary.Partitioning","text":"","code":"# S3 method for Partitioning summary(object, ...)"},{"path":"https://holgstr.github.io/fmeffects/reference/summary.Partitioning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints summary of an FME Partitioning. — summary.Partitioning","text":"object object class Partitioning. ... additional arguments affecting summary produced.","code":""},{"path":"https://holgstr.github.io/fmeffects/news/index.html","id":"fmeffects-013","dir":"Changelog","previous_headings":"","what":"fmeffects 0.1.3","title":"fmeffects 0.1.3","text":"fme ame automatically extract name model’s target variable model. Added support \"lm\"-type models, stats::glm mgcv::gam. fme now computes NLMs via parallel processing future displays progress bar .","code":""},{"path":"https://holgstr.github.io/fmeffects/news/index.html","id":"fmeffects-010","dir":"Changelog","previous_headings":"","what":"fmeffects 0.1.0","title":"fmeffects 0.1.0","text":"CRAN release: 2023-07-19 Created package. Added NEWS.md file track changes package.","code":""}]
