[{"path":"https://holgstr.github.io/fmeffects/articles/fme_theory.html","id":"intuition","dir":"Articles","previous_headings":"","what":"Intuition","title":"Why FMEs?","text":"Forward Marginal Effects (FMEs) probably intuitive way interpret feature effects supervised ML models. Remember interpret beta coefficient numerical feature linear regression model \\(\\mathbb{E}[Y] = \\beta_{0} + \\beta_{1}x_{1} + \\ldots + \\beta_{p}x_{p}\\): \\(x_{j}\\) increases one unit, predicted target variable increases \\(\\beta_{j}\\). FMEs make use instinct apply straightforwardly model. short, FMEs answer following question: change predicted target variable change value feature \\(h\\) units? examples: change predicted blood pressure patients’ weight increases \\(h\\) = 1 kg? change predicted life satisfaction person’s monthly income increases \\(h\\) = 1,000 US dollars? Per default, \\(h\\) 1. However, \\(h\\) can chosen match desired scale interpretation.","code":""},{"path":"https://holgstr.github.io/fmeffects/articles/fme_theory.html","id":"compute-effects","dir":"Articles","previous_headings":"","what":"Compute Effects","title":"Why FMEs?","text":"big advantage FMEs simple. FME defined observation-wise, .e., computed separately observation data. Often, interested estimating global effect, following: 1. Compute FME observation data2. Compute Average Marginal Effect (AME)","code":""},{"path":[]},{"path":"https://holgstr.github.io/fmeffects/articles/fme_theory.html","id":"univariate-feature-effects","dir":"Articles","previous_headings":"Compute Effects > Numerical Features","what":"Univariate Feature Effects","title":"Why FMEs?","text":"given observation \\(\\) step size \\(h_{j}\\), FME single numerical feature \\(x_{j}\\) computed :\\(\\textrm{FME}_{\\mathbf{x}^{()}, \\, h_{j}} = \\widehat{f}(x_{1}^{()},\\, \\ldots, \\, x_{j}^{()}+h_{j},\\, \\ldots, \\, x_{p}^{()})-\\widehat{f}(\\mathbf{x}^{()})\\) can seen formula, FME simply difference predictions original observation \\(x^{()}\\) changed observation \\((x_{1}^{()},\\, \\ldots, \\, x_{j}^{()}+h_{j},\\, \\ldots, \\, x_{p}^{()})\\), \\(h_{j}\\) added feature \\(x_{j}\\).","code":""},{"path":"https://holgstr.github.io/fmeffects/articles/fme_theory.html","id":"bivariate-feature-effects","dir":"Articles","previous_headings":"Compute Effects > Numerical Features","what":"Bivariate Feature Effects","title":"Why FMEs?","text":"just extension univariate FME two features \\(x_{j}, x_{k}\\) affected simultaneously step. Therefore, step size becomes vector \\(\\mathbf{h} = (h_{j}, h_{k})\\), \\(h_{j}\\) denotes change \\(x_{j}\\) \\(h_{k}\\) change \\(x_{k}\\):\\(\\textrm{FME}_{\\mathbf{x}^{()}, \\, \\mathbf{h}} = \\widehat{f}(x_{1}^{()},\\, \\ldots, \\, x_{j}^{()}+h_{j},\\, \\ldots, \\, x_{k}^{()}+h_{k}, \\, \\ldots, x_{p}^{()})-\\widehat{f}(\\mathbf{x}^{()})\\)","code":""},{"path":"https://holgstr.github.io/fmeffects/articles/fme_theory.html","id":"categorical-features","dir":"Articles","previous_headings":"Compute Effects","what":"Categorical Features","title":"Why FMEs?","text":"Equivalent step size \\(h_{j}\\) numerical feature, select category interest \\(c_{h}\\) categorical feature \\(x_{j}\\). given observation \\(\\) category \\(c_{h}\\), FME :\\(\\textrm{FME}_{\\mathbf{x}^{()}, \\, c_{h}} = \\widehat{f}(c_{h},\\, \\mathbf{x}_{-j}^{()})-\\widehat{f}(\\mathbf{x}^{()}), \\, \\, \\, \\, \\, \\, \\, \\,x_{j} \\neq c_{h}\\) simply change categorical feature \\(c_{h}\\), leave features \\(\\mathbf{x}_{-j}^{()}\\) unchanged, compare predicted value changed observation predicted value unchanged observation. Obviously, can compute observations original category category interest \\(x_{j} \\neq c_{h}\\). See example.","code":""},{"path":"https://holgstr.github.io/fmeffects/articles/fme_theory.html","id":"average-marginal-effects-ame","dir":"Articles","previous_headings":"Compute Effects","what":"Average Marginal Effects (AME)","title":"Why FMEs?","text":"AME mean every observation’s FME global estimate feature effect:\\(\\textrm{AME} = \\frac{1}{n}\\sum_{= 1}^{n}{\\, \\textrm{FME}_{\\mathbf{x}^{()}, \\, h_{j}}}\\) Therefore, AME expected difference predicted target variable feature \\(x_{j}\\) changed \\(h_{j}\\) units. \\(h_{j}\\) = 1, corresponds way interpret coefficient \\(\\beta_{j}\\) linear regression model. However, careful: choice \\(h_{j}\\) can strong effect estimated FMEs AME non-linear prediction functions, auch random forests gradient-boosted trees.","code":""},{"path":"https://holgstr.github.io/fmeffects/articles/fme_theory.html","id":"why-we-need-fmes","dir":"Articles","previous_headings":"","what":"Why we need FMEs","title":"Why FMEs?","text":"Marginal effects () already widely used concept interpret statistical models. However, believe ill-suited interpret feature effects ML models. , explain abandon MEs favor FMEs: implementations (e.g., Leeper’s margins package), MEs computed numerical approximation partial derivative prediction function w.r.t. feature \\(x_{j}\\). words, compute finite difference quotient, similar :\\(\\textrm{dME}_{\\mathbf{x}^{()}, \\, j} = \\cfrac{\\widehat{f}(x_{1}^{()}, \\, \\ldots,\\, x_{j}^{()}+h,\\, \\ldots, \\, x_{p}^{()})-\\widehat{f}(\\mathbf{x}^{()})}{h}\\) \\(h\\) typically small (e.g. 10\\({}^{-7}\\)). explained , derivative-based MEs (dME) number shortcomings: Number 1: formula computes estimate partial derivative, .e., tangent prediction function point \\(\\mathbf{x}^{()}\\). default way interpret say: \\(x_{j}\\) increases one unit, predicted target variable can expected increase \\(\\textrm{}_{\\mathbf{x}^{()}, \\, j}\\). Unconsciously, use unit change (\\(h\\) = 1) interpret computed even though computed instantaneous rate change. non-linear prediction functions, can lead substantial misinterpretations. image illustrates :  yellow line prediction function, grey line tangent point \\(x\\) = 0.5. interpreted unit change, dME subject error, due non-linearity prediction function. FME, however, corresponds true change prediction along secant (green line) \\(x\\) = 0.5 \\(x\\) = 1.5. simply way design FME, describes exactly intuition interpreting partial derivatives. Number 2: general, dMEs ill-suited describe models based piecewise constant prediction functions (e.g., CART, random forests gradient-boosted trees), observations located piecewise constant parts prediction function derivative equals zero. contrast, FMEs allow choice sensible step size \\(h\\) large enough traverse jump discontinuity, can seen example : \\(x\\) = -2.5 (green), dME zero. Using FME \\(h\\) = 1, get red point different (lower) function value. , FME negative, corresponding happens \\(x\\) = -2.5 increases one unit.  way, FME much smarter, little brother dME: describes exact behavior prediction function design corresponds way naturally want interpret partial derivative flexible choice \\(h\\), can tailored answer desired research question conceptually simple: researchers can discuss interpretations understand computed","code":""},{"path":"https://holgstr.github.io/fmeffects/articles/fme_theory.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Why FMEs?","text":"Scholbeck, Christian ., et al. “Marginal Effects Non-Linear Prediction Functions.” arXiv preprint arXiv:2201.08837 (2022).","code":""},{"path":"https://holgstr.github.io/fmeffects/articles/fmeffects.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Get started","text":"fmeffects package computes, aggregates, visualizes forward marginal effects (FMEs) supervised machine learning models. Put simply, FME change model’s predicted value given observation feature changed certain value. Read article FMEs computed methods paper details. website best way find resources. three main functions: fme() computes FMEs given model, data, feature(s) interest, step size(s). came() can applied subsequently find subspaces feature space FMEs homogeneous. ame() provides overview prediction function w.r.t. feature using average marginal effects (AMEs).","code":""},{"path":"https://holgstr.github.io/fmeffects/articles/fmeffects.html","id":"example","dir":"Articles","previous_headings":"Introduction","what":"Example","title":"Get started","text":"Let’s look data bike sharing usage system Washington, D.C. (Fanaee-T Gama, 2014). interested predicting count (total number bikes lent users). FMEs model-agnostic interpretation method, .e., can applied regression (binary) classification model. can compute FMEs, need trained model. addition generic lm-type models, fme package supports 100+ models mlr3, tidymodels caret libraries. Let’s try random forest using ranger algorithm:","code":"library(fmeffects) data(bikes, package = \"fmeffects\") str(bikes) ## 'data.frame':    731 obs. of  10 variables: ##  $ season    : Factor w/ 4 levels \"winter\",\"spring\",..: 1 1 1 1 1 1 1 1 1 1 ... ##  $ year      : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 1 1 ... ##  $ holiday   : Factor w/ 2 levels \"yes\",\"no\": 2 2 2 2 2 2 2 2 2 2 ... ##  $ weekday   : Factor w/ 7 levels \"Monday\",\"Tuesday\",..: 7 1 2 3 4 5 6 7 1 2 ... ##  $ workingday: Factor w/ 2 levels \"yes\",\"no\": 2 2 1 1 1 1 1 2 2 1 ... ##  $ weather   : Factor w/ 3 levels \"clear\",\"misty\",..: 2 2 1 1 1 1 2 2 1 1 ... ##  $ temp      : num  8.18 9.08 1.23 1.4 2.67 ... ##  $ humidity  : num  0.806 0.696 0.437 0.59 0.437 ... ##  $ windspeed : num  10.7 16.7 16.6 10.7 12.5 ... ##  $ count     : int  985 801 1349 1562 1600 1606 1510 959 822 1321 ... set.seed(123) library(mlr3verse) library(ranger) task = as_task_regr(x = bikes, target = \"count\") forest = lrn(\"regr.ranger\")$train(task)"},{"path":"https://holgstr.github.io/fmeffects/articles/fmeffects.html","id":"numeric-feature-effects","dir":"Articles","previous_headings":"","what":"Numeric Feature Effects","title":"Get started","text":"FMEs can used compute feature effects numerical categorical features. can done fme() function. common application compute FME single numerical feature, .e., univariate feature effect. variable interest must specified features argument. named list feature names step lengths. step length chosen number deemed useful purpose interpretation. Often, unit change, e.g., features = list(feature_name = 1). concept numerical FMEs extends multivariate feature changes well, fme() can asked compute multivariate feature effect.","code":""},{"path":"https://holgstr.github.io/fmeffects/articles/fmeffects.html","id":"univariate-effects","dir":"Articles","previous_headings":"Numeric Feature Effects","what":"Univariate Effects","title":"Get started","text":"Assume interested effect temperature bike sharing usage. Specifically, set step size 1 investigate FME increase temperature 1 degree Celsius (°C). Thus, compute FMEs features = list(\"temp\" = 1). Note specified ep.method = \"envelope\". means exclude observations adding 1°C temperature results temperature value falling outside range temp data. Thereby, reduce risk model extrapolation.  black arrow indicates direction magnitude step size. horizontal line average marginal effect (AME). AME computed simple mean observation-wise FMEs. can extract relevant aggregate information effects object: Therefore, average, temperature increase 1°C associated increase predicted bike sharing usage roughly 56. can seen plot, observation-wise effects seem vary along range temp. FME tends positive temperature values 0 17°C negative higher temperature values (>17°C). -depth analysis, can inspect individual FMEs observation data (excluding extrapolation points):","code":"effects = fme(model = forest,                data = bikes,                features = list(temp = 1),                ep.method = \"envelope\") plot(effects) effects$ame ## [1] 58.19142 head(effects$results) ## Key: <obs.id> ##    obs.id       fme ##     <int>     <num> ## 1:      1 146.90092 ## 2:      2 235.46815 ## 3:      3  61.06187 ## 4:      4  86.77778 ## 5:      5 222.27062 ## 6:      6 148.98848"},{"path":"https://holgstr.github.io/fmeffects/articles/fmeffects.html","id":"multivariate-effects","dir":"Articles","previous_headings":"Numeric Feature Effects","what":"Multivariate Effects","title":"Get started","text":"Multivariate feature effects can considered one interested combined effect two numeric features. Let’s assume want estimate effect decrease temperature 3°C, combined decrease humidity 10 percentage points, .e., FME features = list(temp = -3, humidity = -0.1): bivariate effects, can plot effects way similar univariate effects (two features, can plot histogram effects):  plot bivariate FMEs uses color scale indicate direction magnitude estimated effect. see drop temperature humidity associated lower predicted bike sharing usage especially days medium temperatures medium--low humidity. Let’s check AME: seems combined decrease temperature 3°C humidity 10 percentage points seems result slightly lower bike sharing usage (average). However, quick check standard deviation FMEs implies effects highly heterogeneous: Therefore, interesting move interpretation feature effects global regional perspective via came() function.","code":"effects2 = fme(model = forest,                data = bikes,                features = list(temp = -3, humidity = -0.1),                ep.method = \"envelope\") plot(effects2) effects2$ame ## [1] -119.7477 sd(effects2$results$fme) ## [1] 486.6348"},{"path":"https://holgstr.github.io/fmeffects/articles/fmeffects.html","id":"non-linearity-measure","dir":"Articles","previous_headings":"Numeric Feature Effects","what":"Non-Linearity Measure","title":"Get started","text":"non-linearity measure (NLM) complimentary tool FME. numerical, observation-wise FME prone misinterpreted linear effect. counteract , NLM quantifies linearity prediction function single observation step size. value 1 indicates linearity, value 0 lower indicates non-linearity (similar R-squared, NLM can take negative values). detailed explanation can found FME methods paper. can compute plot NLMs alongside FMEs univariate multivariate feature changes. Computing NLMs can computationally demanding, use furrr parallelization. illustrate NLMs, let’s recompute first example increase temperature 1 degree Celsius (°C) subset bikes data: Similarly AME, can extract Average NLM (ANLM): value 0.2 indicates linear effect ill-suited describe change prediction function along multivariate feature step. means weary interpreting FME linear effect. NLMs computed, can visualized alongside FMEs using .nlm = TRUE:  Equivalently, let’s compute example bivariate FMEs NLMs:","code":"effects3 = fme(model = forest,                data = bikes[1:200,],                feature = list(temp = 1),                ep.method = \"envelope\",                compute.nlm = TRUE) effects3$anlm ## [1] 0.2394 plot(effects3, with.nlm = TRUE) effects4 = fme(model = forest,                data = bikes[1:200,],                features = list(temp = -3, humidity = -0.1),                ep.method = \"envelope\",                compute.nlm = TRUE) plot(effects4, bins = 25, with.nlm = TRUE)"},{"path":"https://holgstr.github.io/fmeffects/articles/fmeffects.html","id":"categorical-effects","dir":"Articles","previous_headings":"","what":"Categorical Effects","title":"Get started","text":"categorical feature, FME observation simply difference predictions changing observed category feature category specified features. instance, one interested effect rainy weather bike sharing demand, .e., FME changing feature value weather rain observations weather either clear misty: AME -732 implies holding features constant, change rainy weather can expected reduce bike sharing usage 732. categorical feature effects, can plot empirical distribution FMEs:","code":"effects5 = fme(model = forest,               data = bikes,               features = list(weather = \"rain\")) summary(effects5) ##  ## Forward Marginal Effects Object ##  ## Step type: ##   categorical ##  ## Feature & reference category: ##   weather, rain ##  ## Extrapolation point detection: ##   none, EPs: 0 of 710 obs. (0 %) ##  ## Average Marginal Effect (AME): ##   -735.7268 plot(effects5)"},{"path":"https://holgstr.github.io/fmeffects/articles/fmeffects.html","id":"interactions","dir":"Articles","previous_headings":"Categorical Effects","what":"Interactions","title":"Get started","text":"similar way, can consider interactions categories different features. example, consider average combined effect clear sky weekend, .e., weather = \"clear\" workingday = \"\":","code":"fme(model = forest,     data = bikes,     features = list(weather = \"clear\", workingday = \"no\"))$ame ## [1] 332.133"},{"path":"https://holgstr.github.io/fmeffects/articles/fmeffects.html","id":"model-overview-with-ames","dir":"Articles","previous_headings":"","what":"Model Overview with AMEs","title":"Get started","text":"informative overview feature effects model, can use ame() function: computes AME feature included model, default step size 1 numeric features (, 0.01 range smaller 1). categorical features, AMEs computed available categories. Alternatively, can specify subset features step sizes using features argument: , note advise set ep.method = \"envelope\" avoid model extrapolation.","code":"overview = ame(model = forest, data = bikes) overview$results ##       Feature step.size        AME       SD       0.25       0.75   n ## 1      season    winter   -932.474 451.0502 -1264.1138  -630.7163 550 ## 2      season    spring   130.3663 551.5511  -239.1191   633.5755 547 ## 3      season    summer    297.277 532.6362   -35.2344   737.2393 543 ## 4      season      fall   517.0607   561.73    41.4605  1097.7912 553 ## 5        year         0 -1899.0541 644.1449    -2369.9 -1503.1714 366 ## 6        year         1  1778.9527 526.8212  1393.5376   2193.307 365 ## 7     holiday        no   193.0899 244.0208    78.3876   221.9392  21 ## 8     holiday       yes  -130.9783 160.0358  -190.1349   -23.6453 710 ## 9     weekday    Sunday    155.498  187.478    16.1957   247.5624 626 ## 10    weekday    Monday  -160.4841 217.1682  -268.5519    -7.4552 626 ## 11    weekday   Tuesday  -116.8528 192.7621  -201.9012    10.0376 626 ## 12    weekday Wednesday   -45.0773  175.288   -113.629     67.257 627 ## 13    weekday  Thursday    14.3622 161.4098   -62.4143    90.2551 627 ## 14    weekday    Friday    57.0767 162.6013    -31.529    126.111 627 ## 15    weekday  Saturday   110.4502 168.8533      2.324   183.8443 627 ## 16 workingday        no   -33.7587 134.2486    -135.34    70.9886 500 ## 17 workingday       yes    37.4792 154.3649   -75.7429   132.5064 231 ## 18    weather     misty  -224.6293 309.4715  -410.8714   -89.6187 484 ## 19    weather     clear   362.3445 315.0696   145.5768   471.3252 268 ## 20    weather      rain  -735.7268 345.4745  -983.7076  -491.0294 710 ## 21       temp         1    57.9582 169.7163   -24.2329   107.1533 731 ## 22   humidity      0.01   -19.8485  60.4123    -36.703    12.1158 731 ## 23  windspeed         1   -26.1588   76.209   -56.6761    13.8574 731 overview = ame(model = forest,                data = bikes,                features = list(weather = c(\"rain\", \"clear\"), humidity = 0.1),                ep.method = \"envelope\") overview$results ##    Feature step.size        AME        SD       0.25       0.75   n ## 1  weather      rain  -735.7268 345.47445 -983.70756 -491.02936 710 ## 2  weather     clear  362.34454 315.06963  145.57677  471.32523 268 ## 3 humidity       0.1 -204.66354 311.27515 -303.60216   -0.62535 697"},{"path":"https://holgstr.github.io/fmeffects/articles/fmeffects.html","id":"regional-interpretations","dir":"Articles","previous_headings":"","what":"Regional Interpretations","title":"Get started","text":"can use came() specific FME object compute subspaces feature space FMEs homogeneous. Let’s take effect decrease temperature 3°C combined decrease humidity 10 percentage points, see can find three appropriate subspaces. can seen, CTREE algorithm used partition feature space three subspaces. standard deviation (SD) FMEs used criterion measure homogeneity subspace. can see SD substantially smaller two three subspaces compared root node, .e., global feature space. conditional AME (cAME) can used interpret expected FME varies across subspaces. Let’s visualize results:  case, get decision tree assigns observations feature subspace according season (season) humidity (humidity). information contained boxes terminal nodes equivalent summary output can extracted subspaces$results. difference cAMEs across groups means expected varies substantially direction magnitude across subspaces. example, cAME highest summer days. lowest days spring, fall winter humidity 66%.","code":"subspaces = came(effects = effects2, number.partitions = 3) summary(subspaces) ##  ## PartitioningCtree of an FME object ##  ## Method:  partitions = 3 ##  ##    n       cAME  SD(fME)   ##  726 -119.74765 486.6348 * ##  315 -390.91686 388.7438   ##  223  -24.63367 476.1714   ##  188  221.78364 378.5153   ## --- ## * root node (non-partitioned) ##  ## AME (Global): -119.7477 plot(subspaces)"},{"path":"https://holgstr.github.io/fmeffects/articles/fmeffects.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Get started","text":"Fanaee-T, H. Gama, J. (2014). Event labeling combining ensemble detectors background knowledge. Progress Artificial Intelligence 2(2): 113–127 Vanschoren, J., van Rijn, J. N., Bischl, B. Torgo, L. (2013). Openml: networked science machine learning. SIGKDD Explorations 15(2): 49–60","code":""},{"path":"https://holgstr.github.io/fmeffects/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Holger Löwe. Maintainer, author. Christian Scholbeck. Author. Christian Heumann. Reviewer. Bernd Bischl. Reviewer. Giuseppe Casalicchio. Reviewer.","code":""},{"path":"https://holgstr.github.io/fmeffects/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Löwe H, Scholbeck C (2024). fmeffects: Model-Agnostic Interpretations Forward Marginal Effects. R package version 0.1.3, https://github.com/holgstr/fmeffects, https://holgstr.github.io/fmeffects/.","code":"@Manual{,   title = {fmeffects: Model-Agnostic Interpretations with Forward Marginal Effects},   author = {Holger Löwe and Christian Scholbeck},   year = {2024},   note = {R package version 0.1.3, https://github.com/holgstr/fmeffects},   url = {https://holgstr.github.io/fmeffects/}, }"},{"path":"https://holgstr.github.io/fmeffects/index.html","id":"fmeffects-an-r-package-for-forward-marginal-effects-","dir":"","previous_headings":"","what":"Model-Agnostic Interpretations with Forward Marginal Effects","title":"Model-Agnostic Interpretations with Forward Marginal Effects","text":"package implements forward marginal effects (FMEs), model-agnostic framework interpreting feature effects machine learning models. FMEs simplest intuitive way interpret feature effects - explain computed preferred existing methods. Currently, fmeffects supports 100+ regression (binary) classification models: models tidymodels, mlr3 caret libraries. Native support lm-type models, e.g. glm gam.","code":""},{"path":"https://holgstr.github.io/fmeffects/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Model-Agnostic Interpretations with Forward Marginal Effects","text":"CRAN: GitHub:","code":"install.packages(\"fmeffects\") if (!require(\"remotes\")) {   install.packages(\"remotes\") } remotes::install_github(\"holgstr/fmeffects\")"},{"path":"https://holgstr.github.io/fmeffects/index.html","id":"quickstart","dir":"","previous_headings":"","what":"Quickstart","title":"Model-Agnostic Interpretations with Forward Marginal Effects","text":"See -depth tutorial. big advantage FMEs interpreted similar beta coefficients linear regression models. Consider following example: increase temperature (temp) 1°C affect bike rentals (count)?","code":"set.seed(123) #library(fmeffects) devtools::load_all() data(bikes)"},{"path":[]},{"path":"https://holgstr.github.io/fmeffects/index.html","id":"tidymodels","dir":"","previous_headings":"Quickstart > Train a Model","what":"tidymodels","title":"Model-Agnostic Interpretations with Forward Marginal Effects","text":"","code":"# Train a model with tidymodels: library(tidymodels) forest <- rand_forest() %>%   set_mode(\"regression\") %>%   set_engine(\"ranger\") forest <- forest %>% fit(count ~ ., data = bikes)"},{"path":"https://holgstr.github.io/fmeffects/index.html","id":"mlr3","dir":"","previous_headings":"Quickstart > Train a Model","what":"mlr3","title":"Model-Agnostic Interpretations with Forward Marginal Effects","text":"","code":"# Train a model with mlr3: library(mlr3verse) task <- as_task_regr(x = bikes, target = \"count\") forest <- lrn(\"regr.ranger\")$train(task)"},{"path":"https://holgstr.github.io/fmeffects/index.html","id":"compute-effects","dir":"","previous_headings":"Quickstart","what":"Compute effects","title":"Model-Agnostic Interpretations with Forward Marginal Effects","text":"","code":"effects <- fme(model = forest,               data = bikes,               features = list(temp = 1)) summary(effects) #>  #> Forward Marginal Effects Object #>  #> Step type: #>   numerical #>  #> Features & step lengths: #>   temp, 1 #>  #> Extrapolation point detection: #>   none, EPs: 0 of 731 obs. (0 %) #>  #> Average Marginal Effect (AME): #>   56.7848"},{"path":"https://holgstr.github.io/fmeffects/index.html","id":"plot-effects","dir":"","previous_headings":"Quickstart","what":"Plot effects","title":"Model-Agnostic Interpretations with Forward Marginal Effects","text":"average, increase temperature 1°C results increase predicted number bike rentals 56. called average marginal effect (AME).","code":"plot(effects)"},{"path":"https://holgstr.github.io/fmeffects/index.html","id":"model-overview","dir":"","previous_headings":"Quickstart","what":"Model Overview","title":"Model-Agnostic Interpretations with Forward Marginal Effects","text":"Let’s compute AME every feature model:","code":"overview <- ame(model = forest,                 data = bikes) summary(overview) #>  #> Model Summary Using Average Marginal Effects: #>  #>       Feature step.size       AME       SD       0.25       0.75   n #> 1      season    winter -906.3152 452.5878 -1271.0584  -600.2563 550 #> 2      season    spring  133.4859 560.2646  -251.9123   656.0786 547 #> 3      season    summer  290.1049 538.7409   -38.9006   749.0648 543 #> 4      season      fall  522.5996 569.6906    44.5897   1109.532 553 #> 5        year         0 -1899.879 633.9108 -2386.0419 -1505.6763 366 #> 6        year         1 1784.2169 512.4153  1437.0613    2188.87 365 #> 7     holiday        no  192.3511 243.8668    88.2007   234.6339  21 #> 8     holiday       yes -125.4963 162.4853  -201.8025   -16.1199 710 #> 9     weekday    Sunday  162.5495  191.207    18.7489   271.2774 626 #> 10    weekday    Monday -157.9409 223.1961  -265.1487    -4.9606 626 #> 11    weekday   Tuesday -116.1417 198.0911   -202.525    12.3244 626 #> 12    weekday Wednesday  -48.2876 175.2334  -124.9116    62.7098 627 #> 13    weekday  Thursday   12.3041 164.3111   -69.5711    86.6357 627 #> 14    weekday    Friday   58.2788  166.217   -23.7812   138.4033 627 #> 15    weekday  Saturday  109.3594 171.4439     3.0084   191.9563 627 #> 16 workingday        no  -40.2099 132.4716  -139.6087    63.0035 500 #> 17 workingday       yes   48.4213  152.836   -66.5641   141.8286 231 #> 18    weather     misty -215.4948 314.4225  -406.0824   -66.8453 484 #> 19    weather     clear   366.836 321.0056   146.1407   460.0033 268 #> 20    weather      rain -710.9229 338.3372  -967.2359  -477.8959 710 #> 21       temp         1   56.7848 165.6973   -23.7236   103.5828 731 #> 22   humidity      0.01  -20.1036  60.3589    -36.062    11.4318 731 #> 23  windspeed         1  -23.4009  76.1323   -53.8099    15.4921 731"},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"AME simple mean FME computed w.r.t. feature variable model.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"predictor Predictor object features vector features AMEs computed ep.method string specifying extrapolation detection method results data.table AMEs computed computed logical specifying compute() run","code":""},{"path":[]},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"AverageMarginalEffects$new() AverageMarginalEffects$compute() AverageMarginalEffects$clone()","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"Create new AME object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"","code":"AverageMarginalEffects$new(model, data, features = NULL, ep.method = \"none\")"},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"model (trained) model, ability predict new data. must train.formula (tidymodels), Learner (mlr3), train (caret), lm glm object. data data used computing AMEs, must data.frame data.table. features NULL, named list names feature variables AMEs computed, together desired step sizes. numeric features, step size must single number. categorial features, step size must character vector category names subset levels factor variable. ep.method String specifying method used extrapolation detection. One \"none\" \"envelope\". Defaults \"none\".","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"new AME object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"","code":"# Train a model:  library(mlr3verse) library(ranger) set.seed(123) data(bikes, package = \"fmeffects\") task = as_task_regr(x = bikes, id = \"bikes\", target = \"count\") forest = lrn(\"regr.ranger\")$train(task)  # Compute AMEs for all features: overview = AverageMarginalEffects$new(   model = forest,   data = bikes)$compute() summary(overview)  # Compute AMEs for a subset of features with non-default step.sizes: overview = AverageMarginalEffects$new(model = forest,                                       data = bikes,                                       features = list(humidity = 0.1,                                                    weather = c(\"clear\", \"rain\")))$compute() summary(overview)"},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"method-compute-","dir":"Reference","previous_headings":"","what":"Method compute()","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"Computes results, .e., AMEs including SD FMEs, AME object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"","code":"AverageMarginalEffects$compute()"},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"AME object results.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"","code":"# Compute results: overview$compute()"},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"objects class cloneable method.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"","code":"AverageMarginalEffects$clone(deep = FALSE)"},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"deep Whether make deep clone.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/AverageMarginalEffects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class computing Average Marginal Effects (AME) based on Forward Marginal Effects (FME) for a model — AverageMarginalEffects","text":"","code":"## ------------------------------------------------ ## Method `AverageMarginalEffects$new` ## ------------------------------------------------  # Train a model:  library(mlr3verse) #> Loading required package: mlr3 library(ranger) set.seed(123) data(bikes, package = \"fmeffects\") task = as_task_regr(x = bikes, id = \"bikes\", target = \"count\") forest = lrn(\"regr.ranger\")$train(task)  # Compute AMEs for all features: overview = AverageMarginalEffects$new(   model = forest,   data = bikes)$compute() summary(overview) #>  #> Model Summary Using Average Marginal Effects: #>  #>       Feature step.size        AME       SD       0.25       0.75   n #> 1      season    winter   -932.474 451.0502 -1264.1138  -630.7163 550 #> 2      season    spring   130.3663 551.5511  -239.1191   633.5755 547 #> 3      season    summer    297.277 532.6362   -35.2344   737.2393 543 #> 4      season      fall   517.0607   561.73    41.4605  1097.7912 553 #> 5        year         0 -1899.0541 644.1449    -2369.9 -1503.1714 366 #> 6        year         1  1778.9527 526.8212  1393.5376   2193.307 365 #> 7     holiday        no   193.0899 244.0208    78.3876   221.9392  21 #> 8     holiday       yes  -130.9783 160.0358  -190.1349   -23.6453 710 #> 9     weekday    Sunday    155.498  187.478    16.1957   247.5624 626 #> 10    weekday    Monday  -160.4841 217.1682  -268.5519    -7.4552 626 #> 11    weekday   Tuesday  -116.8528 192.7621  -201.9012    10.0376 626 #> 12    weekday Wednesday   -45.0773  175.288   -113.629     67.257 627 #> 13    weekday  Thursday    14.3622 161.4098   -62.4143    90.2551 627 #> 14    weekday    Friday    57.0767 162.6013    -31.529    126.111 627 #> 15    weekday  Saturday   110.4502 168.8533      2.324   183.8443 627 #> 16 workingday        no   -33.7587 134.2486    -135.34    70.9886 500 #> 17 workingday       yes    37.4792 154.3649   -75.7429   132.5064 231 #> 18    weather     misty  -224.6293 309.4715  -410.8714   -89.6187 484 #> 19    weather     clear   362.3445 315.0696   145.5768   471.3252 268 #> 20    weather      rain  -735.7268 345.4745  -983.7076  -491.0294 710 #> 21       temp         1    57.9582 169.7163   -24.2329   107.1533 731 #> 22   humidity      0.01   -19.8485  60.4123    -36.703    12.1158 731 #> 23  windspeed         1   -26.1588   76.209   -56.6761    13.8574 731  # Compute AMEs for a subset of features with non-default step.sizes: overview = AverageMarginalEffects$new(model = forest,                                       data = bikes,                                       features = list(humidity = 0.1,                                                    weather = c(\"clear\", \"rain\")))$compute() summary(overview) #>  #> Model Summary Using Average Marginal Effects: #>  #>    Feature step.size        AME        SD       0.25       0.75   n #> 1  weather     clear  362.34454 315.06963  145.57677  471.32523 268 #> 2  weather      rain  -735.7268 345.47445 -983.70756 -491.02936 710 #> 3 humidity       0.1 -204.12672 308.35744 -299.65295   -1.74606 731  ## ------------------------------------------------ ## Method `AverageMarginalEffects$compute` ## ------------------------------------------------  # Compute results: overview$compute()"},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"FME forward difference prediction due specified change feature values.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"feature vector features predictor Predictor object step.size vector step sizes features specified \"feature\" data.step data.table data matrix step ep.method string specifying extrapolation detection method compute.nlm logical specifying NLM computed nlm.intervals number intervals computing NLMs step.type \"numerical\" \"categorical\" extrapolation.ids vector observation ids classified extrapolation points results data.table FMEs NLMs computed ame Average Marginal Effect (AME) observations results anlm Average Non-linearity Measure (ANLM) observations results computed logical specifying compute() run","code":""},{"path":[]},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"ForwardMarginalEffect$new() ForwardMarginalEffect$compute() ForwardMarginalEffect$plot() ForwardMarginalEffect$clone()","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"Create new ForwardMarginalEffect object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"","code":"ForwardMarginalEffect$new(   predictor,   features,   ep.method = \"none\",   compute.nlm = FALSE,   nlm.intervals = 1 )"},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"predictor Predictor object. features named list feature name(s) step size(s). ep.method String specifying extrapolation detection method. compute.nlm Compute NLM FMEs? Defaults FALSE. nlm.intervals many intervals NLM computation. Defaults 1.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"new ForwardMarginalEffect object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"","code":"# Train a model:  library(mlr3verse) library(ranger) data(bikes, package = \"fmeffects\") forest = lrn(\"regr.ranger\")$train(as_task_regr(x = bikes, target = \"count\"))  # Create an `ForwardMarginalEffect` object: effects = ForwardMarginalEffect$new(makePredictor(forest, bikes),                   features = list(\"temp\" = 1, \"humidity\" = 0.01),                   ep.method = \"envelope\")"},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"method-compute-","dir":"Reference","previous_headings":"","what":"Method compute()","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"Computes results, .e., FME (NLMs) non-extrapolation points, ForwardMarginalEffect object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"","code":"ForwardMarginalEffect$compute()"},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"ForwardMarginalEffect object results.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"","code":"# Compute results: effects$compute()"},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"Plots results, .e., FME (NLMs) non-extrapolation points, FME object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"","code":"ForwardMarginalEffect$plot(with.nlm = FALSE, bins = 40, binwidth = NULL)"},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":".nlm Plots NLMs computed, defaults FALSE. bins Numeric vector giving number bins vertical horizontal directions.  Applies univariate bivariate numeric effects. See ggplot2::stat_summary_hex() details. binwidth Numeric vector giving bin width vertical horizontal directions. Overrides bins set. Applies univariate bivariate numeric effects. See ggplot2::stat_summary_hex() details.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"","code":"# Compute results: effects$plot()"},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"objects class cloneable method.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"","code":"ForwardMarginalEffect$clone(deep = FALSE)"},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"deep Whether make deep clone.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ForwardMarginalEffect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing a forward marginal effect (FME) — ForwardMarginalEffect","text":"","code":"## ------------------------------------------------ ## Method `ForwardMarginalEffect$new` ## ------------------------------------------------   # Train a model:  library(mlr3verse) library(ranger) data(bikes, package = \"fmeffects\") forest = lrn(\"regr.ranger\")$train(as_task_regr(x = bikes, target = \"count\"))  # Create an `ForwardMarginalEffect` object: effects = ForwardMarginalEffect$new(makePredictor(forest, bikes),                   features = list(\"temp\" = 1, \"humidity\" = 0.01),                   ep.method = \"envelope\")  ## ------------------------------------------------ ## Method `ForwardMarginalEffect$compute` ## ------------------------------------------------  # Compute results: effects$compute()  ## ------------------------------------------------ ## Method `ForwardMarginalEffect$plot` ## ------------------------------------------------  # Compute results: effects$plot()"},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class representing a partitioning — Partitioning","title":"R6 Class representing a partitioning — Partitioning","text":"abstract superclass partitioning objects like PartitioningCtree PartitioningRpart. Partitioning contains information feature subspaces conditional average marginal effects (cAME) computed ForwardMarginalEffect objects.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class representing a partitioning — Partitioning","text":"object ForwardMarginalEffect object results computed method method finding feature subspaces value value method results descriptive statistics resulting feature subspaces tree tree representing partitioning, party object tree.control control parameters RP algorithm computed logical specifying compute() run","code":""},{"path":[]},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class representing a partitioning — Partitioning","text":"Partitioning$new() Partitioning$compute() Partitioning$plot() Partitioning$clone()","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class representing a partitioning — Partitioning","text":"Create Partitioning object","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing a partitioning — Partitioning","text":"","code":"Partitioning$new(...)"},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class representing a partitioning — Partitioning","text":"... Partitioning initialized, subclasses","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"method-compute-","dir":"Reference","previous_headings":"","what":"Method compute()","title":"R6 Class representing a partitioning — Partitioning","text":"Computes partitioning, .e., feature subspaces homogeneous FMEs, ForwardMarginalEffect object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing a partitioning — Partitioning","text":"","code":"Partitioning$compute()"},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class representing a partitioning — Partitioning","text":"Partitioning object results.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing a partitioning — Partitioning","text":"","code":"# Compute results for an arbitrary partitioning: # subspaces$compute()"},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"R6 Class representing a partitioning — Partitioning","text":"Plots results, .e., decision tree summary statistics feature subspaces, Partitioning object $compute() run.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing a partitioning — Partitioning","text":"","code":"Partitioning$plot()"},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing a partitioning — Partitioning","text":"","code":"# Plot an arbitrary partitioning: # subspaces$plot()"},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class representing a partitioning — Partitioning","text":"objects class cloneable method.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing a partitioning — Partitioning","text":"","code":"Partitioning$clone(deep = FALSE)"},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class representing a partitioning — Partitioning","text":"deep Whether make deep clone.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Partitioning.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class representing a partitioning — Partitioning","text":"","code":"## ------------------------------------------------ ## Method `Partitioning$compute` ## ------------------------------------------------  # Compute results for an arbitrary partitioning: # subspaces$compute()  ## ------------------------------------------------ ## Method `Partitioning$plot` ## ------------------------------------------------  # Plot an arbitrary partitioning: # subspaces$plot()"},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningCtree.html","id":null,"dir":"Reference","previous_headings":"","what":"PartitioningCtree — PartitioningCtree","title":"PartitioningCtree — PartitioningCtree","text":"task specializes Partitioning ctree algorithm recursive partitioning. recommended use came() construction Partitioning objects.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningCtree.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PartitioningCtree — PartitioningCtree","text":"fmeffects::Partitioning -> PartitioningCtree","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningCtree.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PartitioningCtree — PartitioningCtree","text":"fmeffects::Partitioning$compute() fmeffects::Partitioning$plot()","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningCtree.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PartitioningCtree — PartitioningCtree","text":"PartitioningCtree$new() PartitioningCtree$clone()","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningCtree.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PartitioningCtree — PartitioningCtree","text":"Create new PartitioningCtree object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningCtree.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PartitioningCtree — PartitioningCtree","text":"","code":"PartitioningCtree$new(object, method, value, tree.control = NULL)"},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningCtree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PartitioningCtree — PartitioningCtree","text":"object FME object results computed. method method finding feature subspaces. value value method. tree.control control parameters RP algorithm.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningCtree.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PartitioningCtree — PartitioningCtree","text":"objects class cloneable method.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningCtree.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PartitioningCtree — PartitioningCtree","text":"","code":"PartitioningCtree$clone(deep = FALSE)"},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningCtree.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PartitioningCtree — PartitioningCtree","text":"deep Whether make deep clone.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningRpart.html","id":null,"dir":"Reference","previous_headings":"","what":"PartitioningRpart — PartitioningRpart","title":"PartitioningRpart — PartitioningRpart","text":"task specializes Partitioning rpart algorithm recursive partitioning. recommended use came() construction Partitioning objects.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningRpart.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PartitioningRpart — PartitioningRpart","text":"fmeffects::Partitioning -> PartitioningRpart","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningRpart.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PartitioningRpart — PartitioningRpart","text":"fmeffects::Partitioning$compute() fmeffects::Partitioning$plot()","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningRpart.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PartitioningRpart — PartitioningRpart","text":"PartitioningRpart$new() PartitioningRpart$clone()","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningRpart.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PartitioningRpart — PartitioningRpart","text":"Create new PartitioningRpart object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningRpart.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PartitioningRpart — PartitioningRpart","text":"","code":"PartitioningRpart$new(object, method, value, tree.control = NULL)"},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningRpart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PartitioningRpart — PartitioningRpart","text":"object FME object results computed. method method finding feature subspaces. value value method. tree.control Control parameters RP algorithm.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningRpart.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PartitioningRpart — PartitioningRpart","text":"objects class cloneable method.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningRpart.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PartitioningRpart — PartitioningRpart","text":"","code":"PartitioningRpart$clone(deep = FALSE)"},{"path":"https://holgstr.github.io/fmeffects/reference/PartitioningRpart.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PartitioningRpart — PartitioningRpart","text":"deep Whether make deep clone.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Predictor.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class representing a predictor — Predictor","title":"R6 Class representing a predictor — Predictor","text":"abstract superclass predictor objects like PredictorMLR3 PredictorCaret. Predictor contains information ML model's prediction function training data.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Predictor.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class representing a predictor — Predictor","text":"model (trained) model, ability predict new data. target character vector name target variable. X data.table feature target variables. feature.names character vector names features X. feature.types character vector types (numerical categorical) features X.","code":""},{"path":[]},{"path":"https://holgstr.github.io/fmeffects/reference/Predictor.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class representing a predictor — Predictor","text":"Predictor$new() Predictor$clone()","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Predictor.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class representing a predictor — Predictor","text":"Create Predictor object","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Predictor.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing a predictor — Predictor","text":"","code":"Predictor$new(...)"},{"path":"https://holgstr.github.io/fmeffects/reference/Predictor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class representing a predictor — Predictor","text":"... Predictor initialized, subclasses","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Predictor.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class representing a predictor — Predictor","text":"objects class cloneable method.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/Predictor.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class representing a predictor — Predictor","text":"","code":"Predictor$clone(deep = FALSE)"},{"path":"https://holgstr.github.io/fmeffects/reference/Predictor.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class representing a predictor — Predictor","text":"deep Whether make deep clone.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorCaret.html","id":null,"dir":"Reference","previous_headings":"","what":"PredictorCaret — PredictorCaret","title":"PredictorCaret — PredictorCaret","text":"task specializes Predictor caret regression models. model assumed c(\"train\", \"train.formula\"). recommended use makePredictor() construction Predictor objects.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorCaret.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PredictorCaret — PredictorCaret","text":"fmeffects::Predictor -> PredictorCaret","code":""},{"path":[]},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorCaret.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PredictorCaret — PredictorCaret","text":"PredictorCaret$new() PredictorCaret$predict() PredictorCaret$clone()","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorCaret.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PredictorCaret — PredictorCaret","text":"Create new PredictorCaret object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorCaret.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PredictorCaret — PredictorCaret","text":"","code":"PredictorCaret$new(model, data)"},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorCaret.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PredictorCaret — PredictorCaret","text":"model train, train.formula object. data data used computing FMEs, must data.frame data.table.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorCaret.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"PredictorCaret — PredictorCaret","text":"Predicts observation \"newdata\".","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorCaret.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PredictorCaret — PredictorCaret","text":"","code":"PredictorCaret$predict(newdata)"},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorCaret.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PredictorCaret — PredictorCaret","text":"newdata feature vector target predicted.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorCaret.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PredictorCaret — PredictorCaret","text":"objects class cloneable method.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorCaret.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PredictorCaret — PredictorCaret","text":"","code":"PredictorCaret$clone(deep = FALSE)"},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorCaret.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"PredictorCaret — PredictorCaret","text":"deep Whether make deep clone.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorLM.html","id":null,"dir":"Reference","previous_headings":"","what":"PredictorLM — PredictorLM","title":"PredictorLM — PredictorLM","text":"task specializes Predictor lm lm-type models. model assumed lm. recommended use makePredictor() construction Predictor objects.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorLM.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PredictorLM — PredictorLM","text":"fmeffects::Predictor -> PredictorLM","code":""},{"path":[]},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorLM.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PredictorLM — PredictorLM","text":"PredictorLM$new() PredictorLM$predict() PredictorLM$clone()","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorLM.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PredictorLM — PredictorLM","text":"Create new PredictorCaret object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorLM.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PredictorLM — PredictorLM","text":"","code":"PredictorLM$new(model, data)"},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorLM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PredictorLM — PredictorLM","text":"model train, train.formula object. data data used computing FMEs, must data.frame data.table.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorLM.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"PredictorLM — PredictorLM","text":"Predicts observation \"newdata\".","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorLM.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PredictorLM — PredictorLM","text":"","code":"PredictorLM$predict(newdata)"},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorLM.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PredictorLM — PredictorLM","text":"newdata feature vector target predicted.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorLM.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PredictorLM — PredictorLM","text":"objects class cloneable method.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorLM.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PredictorLM — PredictorLM","text":"","code":"PredictorLM$clone(deep = FALSE)"},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorLM.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"PredictorLM — PredictorLM","text":"deep Whether make deep clone.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorMLR3.html","id":null,"dir":"Reference","previous_headings":"","what":"PredictorMLR3 — PredictorMLR3","title":"PredictorMLR3 — PredictorMLR3","text":"task specializes Predictor mlr3 models. model assumed LearnerRegr LearnerClassif. recommended use makePredictor() construction Predictor objects.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorMLR3.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PredictorMLR3 — PredictorMLR3","text":"fmeffects::Predictor -> PredictorMLR3","code":""},{"path":[]},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorMLR3.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PredictorMLR3 — PredictorMLR3","text":"PredictorMLR3$new() PredictorMLR3$predict() PredictorMLR3$clone()","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorMLR3.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PredictorMLR3 — PredictorMLR3","text":"Create new PredictorMLR3 object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorMLR3.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PredictorMLR3 — PredictorMLR3","text":"","code":"PredictorMLR3$new(model, data)"},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorMLR3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PredictorMLR3 — PredictorMLR3","text":"model LearnerRegr LearnerClassif object. data data used computing FMEs, must data.frame data.table.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorMLR3.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"PredictorMLR3 — PredictorMLR3","text":"Predicts observation \"newdata\".","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorMLR3.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PredictorMLR3 — PredictorMLR3","text":"","code":"PredictorMLR3$predict(newdata)"},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorMLR3.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PredictorMLR3 — PredictorMLR3","text":"newdata feature vector target predicted.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorMLR3.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PredictorMLR3 — PredictorMLR3","text":"objects class cloneable method.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorMLR3.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PredictorMLR3 — PredictorMLR3","text":"","code":"PredictorMLR3$clone(deep = FALSE)"},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorMLR3.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"PredictorMLR3 — PredictorMLR3","text":"deep Whether make deep clone.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorParsnip.html","id":null,"dir":"Reference","previous_headings":"","what":"PredictorParsnip — PredictorParsnip","title":"PredictorParsnip — PredictorParsnip","text":"task specializes Predictor parsnip models. model assumed model_fit object. recommended use makePredictor() construction Predictor objects.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorParsnip.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PredictorParsnip — PredictorParsnip","text":"fmeffects::Predictor -> PredictorParsnip","code":""},{"path":[]},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorParsnip.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PredictorParsnip — PredictorParsnip","text":"PredictorParsnip$new() PredictorParsnip$predict() PredictorParsnip$clone()","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorParsnip.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PredictorParsnip — PredictorParsnip","text":"Create new PredictorParsnip object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorParsnip.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PredictorParsnip — PredictorParsnip","text":"","code":"PredictorParsnip$new(model, data)"},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorParsnip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PredictorParsnip — PredictorParsnip","text":"model model_fit object. data data used computing FMEs, must data.frame data.table.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorParsnip.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"PredictorParsnip — PredictorParsnip","text":"Predicts observation \"newdata\".","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorParsnip.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PredictorParsnip — PredictorParsnip","text":"","code":"PredictorParsnip$predict(newdata)"},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorParsnip.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PredictorParsnip — PredictorParsnip","text":"newdata feature vector target predicted.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorParsnip.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PredictorParsnip — PredictorParsnip","text":"objects class cloneable method.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorParsnip.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PredictorParsnip — PredictorParsnip","text":"","code":"PredictorParsnip$clone(deep = FALSE)"},{"path":"https://holgstr.github.io/fmeffects/reference/PredictorParsnip.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"PredictorParsnip — PredictorParsnip","text":"deep Whether make deep clone.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ame.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes AMEs for every feature (or a subset of features) of a model. — ame","title":"Computes AMEs for every feature (or a subset of features) of a model. — ame","text":"wrapper function AverageMarginalEffects$new(...)$compute(). computes Average Marginal Effects (AME) based Forward Marginal Effects (FME) model. AME simple mean FME computed w.r.t. feature variable model.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes AMEs for every feature (or a subset of features) of a model. — ame","text":"","code":"ame(model, data, features = NULL, ep.method = \"none\")"},{"path":"https://holgstr.github.io/fmeffects/reference/ame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes AMEs for every feature (or a subset of features) of a model. — ame","text":"model (trained) model, ability predict new data. must train.formula (tidymodels), Learner (mlr3), train (caret), lm glm object. data data used computing AMEs, must data.frame data.table. features NULL, named list names feature variables AMEs computed, together desired step sizes. numeric features, step size must single number. categorial features, step size must character vector category names subset levels factor variable. ep.method String specifying method used extrapolation detection. One \"none\" \"envelope\". Defaults \"none\".","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes AMEs for every feature (or a subset of features) of a model. — ame","text":"AverageMarginalEffects object, field results containing list summary statistics, including Feature: name feature. step.size: step.size w.r.t. specified feature. AME: Average Marginal Effect step length step.size w.r.t. specified feature. SD: standard deviation FMEs specified feature step.size. 0.25: 0.25-quantile FMEs specified feature step.size. 0.75: 0.75-quantile FMEs specified feature step.size. n: number observations included computation AME. can vary following reasons: categorical features, FMEs computed observations original category step.size category. numerical features, FMEs computed observations extrapolation points (ep.method set \"envelope\").","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ame.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Computes AMEs for every feature (or a subset of features) of a model. — ame","text":"Scholbeck, C.., Casalicchio, G., Molnar, C. et al. Marginal effects non-linear prediction functions. Data Min Knowl Disc (2024). https://doi.org/10.1007/s10618-023-00993-x","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/ame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes AMEs for every feature (or a subset of features) of a model. — ame","text":"","code":"# Train a model:  library(mlr3verse) library(ranger) data(bikes, package = \"fmeffects\") set.seed(123) task = as_task_regr(x = bikes, id = \"bikes\", target = \"count\") forest = lrn(\"regr.ranger\")$train(task)  # Compute AMEs for all features: overview = ame(model = forest, data = bikes) summary(overview) #>  #> Model Summary Using Average Marginal Effects: #>  #>       Feature step.size        AME       SD       0.25       0.75   n #> 1      season    winter   -932.474 451.0502 -1264.1138  -630.7163 550 #> 2      season    spring   130.3663 551.5511  -239.1191   633.5755 547 #> 3      season    summer    297.277 532.6362   -35.2344   737.2393 543 #> 4      season      fall   517.0607   561.73    41.4605  1097.7912 553 #> 5        year         0 -1899.0541 644.1449    -2369.9 -1503.1714 366 #> 6        year         1  1778.9527 526.8212  1393.5376   2193.307 365 #> 7     holiday        no   193.0899 244.0208    78.3876   221.9392  21 #> 8     holiday       yes  -130.9783 160.0358  -190.1349   -23.6453 710 #> 9     weekday    Sunday    155.498  187.478    16.1957   247.5624 626 #> 10    weekday    Monday  -160.4841 217.1682  -268.5519    -7.4552 626 #> 11    weekday   Tuesday  -116.8528 192.7621  -201.9012    10.0376 626 #> 12    weekday Wednesday   -45.0773  175.288   -113.629     67.257 627 #> 13    weekday  Thursday    14.3622 161.4098   -62.4143    90.2551 627 #> 14    weekday    Friday    57.0767 162.6013    -31.529    126.111 627 #> 15    weekday  Saturday   110.4502 168.8533      2.324   183.8443 627 #> 16 workingday        no   -33.7587 134.2486    -135.34    70.9886 500 #> 17 workingday       yes    37.4792 154.3649   -75.7429   132.5064 231 #> 18    weather     misty  -224.6293 309.4715  -410.8714   -89.6187 484 #> 19    weather     clear   362.3445 315.0696   145.5768   471.3252 268 #> 20    weather      rain  -735.7268 345.4745  -983.7076  -491.0294 710 #> 21       temp         1    57.9582 169.7163   -24.2329   107.1533 731 #> 22   humidity      0.01   -19.8485  60.4123    -36.703    12.1158 731 #> 23  windspeed         1   -26.1588   76.209   -56.6761    13.8574 731  # Compute AMEs for a subset of features with non-default step.sizes: overview = ame(model = forest,                data = bikes,                features = list(humidity = 0.1, weather = c(\"clear\", \"rain\"))) summary(overview) #>  #> Model Summary Using Average Marginal Effects: #>  #>    Feature step.size        AME        SD       0.25       0.75   n #> 1  weather     clear  362.34454 315.06963  145.57677  471.32523 268 #> 2  weather      rain  -735.7268 345.47445 -983.70756 -491.02936 710 #> 3 humidity       0.1 -204.12672 308.35744 -299.65295   -1.74606 731  # Extract results: overview$results #>    Feature step.size        AME        SD       0.25       0.75   n #> 1  weather     clear  362.34454 315.06963  145.57677  471.32523 268 #> 2  weather      rain  -735.7268 345.47445 -983.70756 -491.02936 710 #> 3 humidity       0.1 -204.12672 308.35744 -299.65295   -1.74606 731"},{"path":"https://holgstr.github.io/fmeffects/reference/bikes.html","id":null,"dir":"Reference","previous_headings":"","what":"Regression data of the usage of rental bikes in Washington D.C., USA — bikes","title":"Regression data of the usage of rental bikes in Washington D.C., USA — bikes","text":"data set contains information daily bike sharing usage Washington, D.C. years 2011-2012. target variable count, total number bikes lent users specific day.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/bikes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression data of the usage of rental bikes in Washington D.C., USA — bikes","text":"","code":"data(bikes)"},{"path":"https://holgstr.github.io/fmeffects/reference/bikes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Regression data of the usage of rental bikes in Washington D.C., USA — bikes","text":"object class data.frame 731 rows 10 columns.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/bikes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Regression data of the usage of rental bikes in Washington D.C., USA — bikes","text":"original data can found UCI database (ID = 275).","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/bikes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Regression data of the usage of rental bikes in Washington D.C., USA — bikes","text":"data frame contains following columns: season Season year year Year; 0=2011, 1=2012 holiday day public holiday (y/n) weekday Day week workingday day aworking day (y/n) weather Weather situation temp Temperature degrees celsius humidity Humidity (relative) windspeed Windspeed miles per hour count Total number bikes lent users","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/bikes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Regression data of the usage of rental bikes in Washington D.C., USA — bikes","text":"Fanaee-T, Hadi, Gama, Joao, \"Event labeling combining ensemble detectors background knowledge\", Progress Artificial Intelligence (2013): pp. 1-15, Springer Berlin Heidelberg, doi:10.1007/s13748-013-0040-3.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/came.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes a partitioning for a ForwardMarginalEffect — came","title":"Computes a partitioning for a ForwardMarginalEffect — came","text":"wrapper function creates correct subclass Partitioning. computes feature subspaces semi-global interpretations FMEs via recursive partitioning (RP).","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/came.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes a partitioning for a ForwardMarginalEffect — came","text":"","code":"came(   effects,   number.partitions = NULL,   max.sd = Inf,   rp.method = \"ctree\",   tree.control = NULL )"},{"path":"https://holgstr.github.io/fmeffects/reference/came.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes a partitioning for a ForwardMarginalEffect — came","text":"effects ForwardMarginalEffect object FMEs computed. number.partitions exact number partitions required. Either number.partitions max.sd can specified. max.sd maximum standard deviation required partition. Among multiple partitionings criterion identified, one lowest number partitions selected. Either number.partitions max.sd can specified. rp.method One \"ctree\" \"rpart\". RP algorithm used growing decision tree. Defaults \"ctree\". tree.control Control parameters RP algorithm. One \"ctree.control(...)\" \"rpart.control(...)\".","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/came.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes a partitioning for a ForwardMarginalEffect — came","text":"Partitioning Object identified feature subspaces.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/came.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Computes a partitioning for a ForwardMarginalEffect — came","text":"Scholbeck, C.., Casalicchio, G., Molnar, C. et al. Marginal effects non-linear prediction functions. Data Min Knowl Disc (2024). https://doi.org/10.1007/s10618-023-00993-x","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/came.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes a partitioning for a ForwardMarginalEffect — came","text":"","code":"# Train a model and compute FMEs:  library(mlr3verse) library(ranger) data(bikes, package = \"fmeffects\") task = as_task_regr(x = bikes, id = \"bikes\", target = \"count\") forest = lrn(\"regr.ranger\")$train(task) effects = fme(model = forest, data = bikes, features = list(\"temp\" = 1), ep.method = \"envelope\")  # Find a partitioning with exactly 3 subspaces: subspaces = came(effects, number.partitions = 3)  # Find a partitioning with a maximum standard deviation of 20, use `rpart`: library(rpart) subspaces = came(effects, max.sd = 200, rp.method = \"rpart\")  # Analyze results: summary(subspaces) #>  #> PartitioningRpart of an FME object #>  #> Method:  max.sd = 200 #>  #>    n      cAME  SD(fME)   #>  728  55.37279 168.0597 * #>  349 -36.89525 109.3153   #>  379 140.33730 167.9926   #> --- #> * root node (non-partitioned) #>  #> AME (Global): 55.3728 #>  plot(subspaces)   # Extract results: subspaces$results #> [[1]] #> [[1]]$n #> [1] 728 #>  #> [[1]]$cAME #> [1] 55.37279 #>  #> [[1]]$`SD(fME)` #> [1] 168.0597 #>  #> [[1]]$is.terminal.node #> [1] FALSE #>  #>  #> [[2]] #> [[2]]$n #> [1] 349 #>  #> [[2]]$cAME #> [1] -36.89525 #>  #> [[2]]$`SD(fME)` #> [1] 109.3153 #>  #> [[2]]$is.terminal.node #> [1] TRUE #>  #>  #> [[3]] #> [[3]]$n #> [1] 379 #>  #> [[3]]$cAME #> [1] 140.3373 #>  #> [[3]]$`SD(fME)` #> [1] 167.9926 #>  #> [[3]]$is.terminal.node #> [1] TRUE #>  #>  subspaces$tree #>  #> Model formula: #> fme ~ season + year + holiday + weekday + workingday + weather +  #>     temp + humidity + windspeed #>  #> Fitted party: #> [1] root #> |   [2] temp >= 16.12667: -36.895 (n = 349, err = 4158543.0) #> |   [3] temp < 16.12667: 140.337 (n = 379, err = 10667735.4) #>  #> Number of inner nodes:    1 #> Number of terminal nodes: 2"},{"path":"https://holgstr.github.io/fmeffects/reference/fme.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes FMEs. — fme","title":"Computes FMEs. — fme","text":"wrapper function FME$new(...)$compute(). computes forward marginal effects (FMEs) specified change feature values.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/fme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes FMEs. — fme","text":"","code":"fme(   model,   data,   features,   ep.method = \"none\",   compute.nlm = FALSE,   nlm.intervals = 1 )"},{"path":"https://holgstr.github.io/fmeffects/reference/fme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes FMEs. — fme","text":"model (trained) model, ability predict new data. must train.formula (tidymodels), Learner (mlr3), train (caret), lm glm object. data data used computing FMEs, must data.frame data.table. features named list feature name(s) step size(s). list names correspond names feature variables affected step. list must exclusively contain either numeric categorical features, combination . Numeric features must number step size, categorical features name reference category. ep.method String specifying method used extrapolation detection. One \"none\" \"envelope\". Defaults \"none\". compute.nlm Compute NLMs FMEs numerical steps. Defaults FALSE. nlm.intervals Number intervals computing NLMs. Results longer computing time accurate approximation NLMs. Defaults 1.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/fme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes FMEs. — fme","text":"ForwardsMarginalEffect object following fields: ame average marginal effect (AME). anlm average non-linearity measure (NLM). extrapolation.ids observations identified extrapolation points included analysis. data.step, data.table feature matrix step applied. results, data.table individual FMEs (NLMs, applicable) observations extrapolation points.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/fme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computes FMEs. — fme","text":"one numeric features passed features argument, FMEs computed $$FME_{x, h_{S}} = f(x + h_{S}, x_{-S}) - f(x)$$ \\(h_{S}\\) step size vector \\(x_{-S}\\) features. one categorical features passed features, $$FME_{x, c_{J}} = f(c_{J}, x_{-J}) - f(x)$$ \\(c_{J}\\) set selected reference categories features \\(x_{-J}\\) features.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/fme.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Computes FMEs. — fme","text":"Scholbeck, C.., Casalicchio, G., Molnar, C. et al. Marginal effects non-linear prediction functions. Data Min Knowl Disc (2024). https://doi.org/10.1007/s10618-023-00993-x","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/fme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes FMEs. — fme","text":"","code":"# Train a model:  library(mlr3verse) library(ranger) data(bikes, package = \"fmeffects\") forest = lrn(\"regr.ranger\")$train(as_task_regr(x = bikes, target = \"count\"))  # Compute FMEs for a numerical feature: effects = fme(model = forest, data = bikes, features = list(\"temp\" = 1), ep.method = \"envelope\")  # Analyze results: summary(effects) #>  #> Forward Marginal Effects Object #>  #> Step type: #>   numerical #>  #> Features & step lengths: #>   temp, 1 #>  #> Extrapolation point detection: #>   envelope, EPs: 3 of 731 obs. (0 %) #>  #> Average Marginal Effect (AME): #>   57.7107 plot(effects) #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'   # Extract results: effects$results #> Key: <obs.id> #>      obs.id       fme #>       <int>     <num> #>   1:      1 139.66991 #>   2:      2 314.27715 #>   3:      3  62.28153 #>   4:      4  93.58907 #>   5:      5 183.74889 #>  ---                  #> 724:    727 339.13027 #> 725:    728 291.70992 #> 726:    729 410.07049 #> 727:    730 473.42936 #> 728:    731   5.23601  # Compute the AME for a categorial feature: fme(model = forest, data = bikes, features = list(\"weather\" = \"rain\"))$ame #> [1] -782.7391"},{"path":"https://holgstr.github.io/fmeffects/reference/fmeffects-package.html","id":null,"dir":"Reference","previous_headings":"","what":"fmeffects — fmeffects-package","title":"fmeffects — fmeffects-package","text":"Computes forward marginal effects (FME) arbitrary supervised machine learning models. provide model data, 'fmeffects' gives feature effects.","code":""},{"path":[]},{"path":"https://holgstr.github.io/fmeffects/reference/fmeffects-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"fmeffects — fmeffects-package","text":"Maintainer: Holger Löwe hbj.loewe@gmail.com Authors: Christian Scholbeck christian.scholbeck@stat.uni-muenchen.de contributors: Christian Heumann christian.heumann@stat.uni-muenchen.de [reviewer] Bernd Bischl bernd.bischl@stat.uni-muenchen.de [reviewer] Giuseppe Casalicchio giuseppe.casalicchio@stat.uni-muenchen.de [reviewer]","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/makePredictor.html","id":null,"dir":"Reference","previous_headings":"","what":"User-friendly function to create a Predictor. — makePredictor","title":"User-friendly function to create a Predictor. — makePredictor","text":"wrapper function creates correct subclass Predictor automatically model. Can passed constructor FME.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/makePredictor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User-friendly function to create a Predictor. — makePredictor","text":"","code":"makePredictor(model, data)"},{"path":"https://holgstr.github.io/fmeffects/reference/makePredictor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User-friendly function to create a Predictor. — makePredictor","text":"model (trained) model, ability predict new data. data data used computing FMEs, must data.frame data.table.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/makePredictor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"User-friendly function to create a Predictor. — makePredictor","text":"","code":"# Train a model:  library(mlr3verse) data(bikes, package = \"fmeffects\") task = as_task_regr(x = bikes, id = \"bikes\", target = \"count\") forest = lrn(\"regr.ranger\")$train(task)  # Create the predictor: predictor = makePredictor(forest, bikes)  # This instantiated an object of the correct subclass of `Predictor`: class(predictor) #> [1] \"PredictorMLR3\" \"Predictor\"     \"R6\""},{"path":"https://holgstr.github.io/fmeffects/reference/plot.ForwardMarginalEffect.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots an ForwardMarginalEffect object. — plot.ForwardMarginalEffect","title":"Plots an ForwardMarginalEffect object. — plot.ForwardMarginalEffect","text":"Plots ForwardMarginalEffect object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/plot.ForwardMarginalEffect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots an ForwardMarginalEffect object. — plot.ForwardMarginalEffect","text":"","code":"# S3 method for ForwardMarginalEffect plot(x, ...)"},{"path":"https://holgstr.github.io/fmeffects/reference/plot.ForwardMarginalEffect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots an ForwardMarginalEffect object. — plot.ForwardMarginalEffect","text":"x object class ForwardMarginalEffect. See method $plot() ForwardMarginalEffect() details. ... additional arguments affecting summary produced.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/plot.Partitioning.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots an FME Partitioning. — plot.Partitioning","title":"Plots an FME Partitioning. — plot.Partitioning","text":"Plots FME Partitioning.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/plot.Partitioning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots an FME Partitioning. — plot.Partitioning","text":"","code":"# S3 method for Partitioning plot(x, ...)"},{"path":"https://holgstr.github.io/fmeffects/reference/plot.Partitioning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots an FME Partitioning. — plot.Partitioning","text":"x object class Partitioning. ... additional arguments affecting summary produced.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/print.ForwardMarginalEffect.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints an ForwardMarginalEffect object. — print.ForwardMarginalEffect","title":"Prints an ForwardMarginalEffect object. — print.ForwardMarginalEffect","text":"Prints ForwardMarginalEffect object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/print.ForwardMarginalEffect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints an ForwardMarginalEffect object. — print.ForwardMarginalEffect","text":"","code":"# S3 method for ForwardMarginalEffect print(x, ...)"},{"path":"https://holgstr.github.io/fmeffects/reference/print.ForwardMarginalEffect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints an ForwardMarginalEffect object. — print.ForwardMarginalEffect","text":"x object class ForwardMarginalEffect. ... additional arguments affecting summary produced.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/print.Partitioning.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints an FME Partitioning. — print.Partitioning","title":"Prints an FME Partitioning. — print.Partitioning","text":"Prints FME Partitioning.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/print.Partitioning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints an FME Partitioning. — print.Partitioning","text":"","code":"# S3 method for Partitioning print(x, ...)"},{"path":"https://holgstr.github.io/fmeffects/reference/print.Partitioning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints an FME Partitioning. — print.Partitioning","text":"x object class Partitioning. ... additional arguments affecting summary produced.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/summary.AverageMarginalEffects.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints summary of an AverageMarginalEffects object. — summary.AverageMarginalEffects","title":"Prints summary of an AverageMarginalEffects object. — summary.AverageMarginalEffects","text":"Prints summary AverageMarginalEffects object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/summary.AverageMarginalEffects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints summary of an AverageMarginalEffects object. — summary.AverageMarginalEffects","text":"","code":"# S3 method for AverageMarginalEffects summary(object, ...)"},{"path":"https://holgstr.github.io/fmeffects/reference/summary.AverageMarginalEffects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints summary of an AverageMarginalEffects object. — summary.AverageMarginalEffects","text":"object object class AverageMarginalEffects. ... additional arguments affecting summary produced.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/summary.ForwardMarginalEffect.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints summary of an ForwardMarginalEffect object. — summary.ForwardMarginalEffect","title":"Prints summary of an ForwardMarginalEffect object. — summary.ForwardMarginalEffect","text":"Prints summary ForwardMarginalEffect object.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/summary.ForwardMarginalEffect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints summary of an ForwardMarginalEffect object. — summary.ForwardMarginalEffect","text":"","code":"# S3 method for ForwardMarginalEffect summary(object, ...)"},{"path":"https://holgstr.github.io/fmeffects/reference/summary.ForwardMarginalEffect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints summary of an ForwardMarginalEffect object. — summary.ForwardMarginalEffect","text":"object object class ForwardMarginalEffect. ... additional arguments affecting summary produced.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/summary.Partitioning.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints summary of an FME Partitioning. — summary.Partitioning","title":"Prints summary of an FME Partitioning. — summary.Partitioning","text":"Prints summary FME Partitioning.","code":""},{"path":"https://holgstr.github.io/fmeffects/reference/summary.Partitioning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints summary of an FME Partitioning. — summary.Partitioning","text":"","code":"# S3 method for Partitioning summary(object, ...)"},{"path":"https://holgstr.github.io/fmeffects/reference/summary.Partitioning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints summary of an FME Partitioning. — summary.Partitioning","text":"object object class Partitioning. ... additional arguments affecting summary produced.","code":""},{"path":"https://holgstr.github.io/fmeffects/news/index.html","id":"fmeffects-013","dir":"Changelog","previous_headings":"","what":"fmeffects 0.1.3","title":"fmeffects 0.1.3","text":"fme ame automatically extract name model’s target variable model. Added support \"lm\"-type models, stats::glm mgcv::gam. fme now computes NLMs via parallel processing future displays progress bar . Multivariate effects two features can computed visualized. Improved visualizations (especially larger data sets) via hexagon plots. Better error communication cli. Feature interactions categorical features supported.","code":""},{"path":"https://holgstr.github.io/fmeffects/news/index.html","id":"fmeffects-010","dir":"Changelog","previous_headings":"","what":"fmeffects 0.1.0","title":"fmeffects 0.1.0","text":"CRAN release: 2023-07-19 Created package. Added NEWS.md file track changes package.","code":""}]
