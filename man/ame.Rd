% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ame.R
\name{ame}
\alias{ame}
\title{Computes AMEs for all (or a subset of the) features of a model.}
\usage{
ame(model, data, target, features = NULL, ep.method = "none")
}
\arguments{
\item{model}{The (trained) model, with the ability to predict on new data. This must be an \code{LearnerRegr} (\code{mlr3}) or \code{train} (\code{caret}) object.}

\item{data}{The data used for computing FMEs, must be data.frame or data.table.}

\item{target}{A string specifying the target variable.}

\item{features}{A named character vector of the names of the feature variables for which AMEs should be computed, together with the desired step sizes.}

\item{ep.method}{String specifying the method used for extrapolation detection. One of \code{"none"} or \code{"envelope"}. Defaults to \code{"none"}.}
}
\value{
A list of summary statistics, including
\itemize{
\item \code{AME}: The Average Marginal Effect for a step of length step.size w.r.t. the specified feature.
\item \code{0.25}: The 0.25-quantile of FMEs for the specified feature and step.size.
\item \code{0.75}: The 0.75-quantile of FMEs for the specified feature and step.size.
\item \code{n}: The number of observations included for the computation of the AME. This can vary for the following reasons:
For categorical features, FMEs are only computed for observations where the original category is not the step.size category.
For numerical features, FMEs are only computed for observations that are not extrapolation points (if ep.method is set to \code{"envelope"}).
}
}
\description{
This function computes Average Marginal Effects (AME) for all or only a number of features of a model.
In principle, \code{fme()} is applied to all selected features, and the AME extracted together with its quantiles.
For numerical features, the default step.size is 1, or 0.01 if the range of the feature is smaller than 1.
The default step.sizes can be overwritten using the \code{features} argument.
}
\examples{
# Train a model:

library(mlr3verse)
data(bikes, package = "fme")
forest = lrn("regr.ranger")$train(as_task_regr(x = bikes, id = "bikes", target = "count"))

# Compute AMEs for all features:
ame(model = model, data = bikes, target = "count")

# Compute AMEs for a subset of features with non-default step.sizes:
ame(model = model, data = bikes, target = "count", features = c(humidity = 0.1, weather = c("clear", "rain")))

}
\references{
Scholbeck, C. A., Casalicchio, G., Molnar, C., Bischl, B., & Heumann, C. (2022). Marginal Effects for Non-Linear Prediction Functions.
}
